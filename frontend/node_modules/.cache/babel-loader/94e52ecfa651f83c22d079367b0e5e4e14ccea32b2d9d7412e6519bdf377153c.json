{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mfauz\\\\Documents\\\\TicTacToe\\\\frontend\\\\src\\\\pages\\\\Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Configuration from \"../components/Configuration\";\nimport { Box, Typography, Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst boardSizeConfiguration = {\n  id: `000000000000-0000-0000-0000-000000000000`,\n  label: \"3 x 3\",\n  value: \"3\"\n};\nconst boardSizeConfigurations = [{\n  id: `000000000000-0000-0000-0000-000000000000`,\n  label: \"3 x 3\",\n  value: \"3\"\n}, {\n  id: `000000000000-0000-0000-0000-000000000000`,\n  label: \"4 x 4\",\n  value: \"4\"\n}, {\n  id: `000000000000-0000-0000-0000-000000000000`,\n  label: \"5 x 5\",\n  value: \"5\"\n}];\nconst Game = () => {\n  _s();\n  const [boardSize, setBoardSize] = useState(4);\n  const [gameMode, setGameMode] = useState(\"ai\");\n  const [aiDifficulty, setAIDifficulty] = useState(\"hard\");\n  const [boardSizeOptions, setBoardSizeOptions] = useState(boardSizeConfigurations);\n  const [isTimerEnabled, setIsTimerEnabled] = useState(false);\n  const [timerDuration, setTimerDuration] = useState(30);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const gameBoard = () => {\n    // If game is over or board is empty, reset the board\n    navigate(\"/gameboard\", {\n      state: {\n        boardSize: boardSize,\n        isAI: gameMode === \"ai\",\n        aiDifficulty: aiDifficulty,\n        isTimerEnabled: isTimerEnabled,\n        timerDuration: timerDuration,\n        gameMode: gameMode\n      }\n    });\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  const token = sessionStorage.getItem('token'); // Retrieve token from storage\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/tictactoe_game_service/client/configuration', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            // Include the authorization header\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log(\"Login successful:\", response.ok);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const json = await response.json();\n        setBoardSize(json);\n        setBoardSizeOptions(json.boardSizeConfiguration);\n        setAIDifficulty(json);\n        setGameMode(json);\n      } catch (error) {\n        console.error(\"Fetching error:\", error);\n        // Handle the error appropriately, e.g., display an error message\n      }\n    };\n    if (token) {\n      fetchData();\n    } else {\n      // Handle the case where there is no token, e.g., redirect to login\n      console.warn('No token available, cannot fetch data.');\n    }\n  }, [token]); // Effect runs when token changes\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      textAlign: \"center\",\n      py: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      sx: {\n        fontFamily: \"Poppins\",\n        mb: 2,\n        fontWeight: \"bold\"\n      },\n      children: \"TicTacToe Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        borderBottom: \"1px solid #e0e0e0\",\n        margin: \"0 auto 20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      sx: {\n        fontFamily: \"Poppins\",\n        mb: 0\n      },\n      children: \"Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Configuration, {\n      boardSize: boardSize,\n      setBoardSize: setBoardSize,\n      gameMode: gameMode,\n      setGameMode: setGameMode,\n      aiDifficulty: aiDifficulty,\n      setAIDifficulty: setAIDifficulty,\n      boardSizeOptions: boardSizeOptions,\n      setBoardSizeOptions: setBoardSizeOptions,\n      isTimerEnabled: isTimerEnabled,\n      setIsTimerEnabled: setIsTimerEnabled,\n      timerDuration: timerDuration,\n      setTimerDuration: setTimerDuration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        borderBottom: \"1px solid #e0e0e0\",\n        margin: \"0 auto 20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      fullWidth: true,\n      disabled: loading,\n      onClick: gameBoard,\n      sx: {\n        mt: 2,\n        fontFamily: \"Poppins\",\n        fontWeight: \"bold\",\n        py: 1.5,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: \"\\\"Play Game\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"k8+b0y8yLAS5RnbCR3rUfaCBH08=\", false, function () {\n  return [useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Configuration","Box","Typography","Button","useNavigate","jsxDEV","_jsxDEV","boardSizeConfiguration","id","label","value","boardSizeConfigurations","Game","_s","boardSize","setBoardSize","gameMode","setGameMode","aiDifficulty","setAIDifficulty","boardSizeOptions","setBoardSizeOptions","isTimerEnabled","setIsTimerEnabled","timerDuration","setTimerDuration","loading","setLoading","navigate","gameBoard","state","isAI","token","sessionStorage","getItem","fetchData","response","fetch","method","headers","console","log","ok","Error","status","json","error","warn","sx","textAlign","py","children","variant","gutterBottom","fontFamily","mb","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","style","width","borderBottom","margin","color","type","fullWidth","disabled","onClick","mt","display","justifyContent","alignItems","_c","$RefreshReg$"],"sources":["C:/Users/mfauz/Documents/TicTacToe/frontend/src/pages/Game.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Board from \"../components/Board\";\nimport Configuration from \"../components/Configuration\";\nimport { api } from \"../utils/api\";\nimport { Box, Typography, Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport {BoardSizeConfiguration} from \"../components/Configuration\"\n\nconst boardSizeConfiguration: BoardSizeConfiguration = {\n  id:`000000000000-0000-0000-0000-000000000000`,\n  label: \"3 x 3\",\n  value:\"3\"\n}\n\nconst boardSizeConfigurations: BoardSizeConfiguration[] = [{\n  id:`000000000000-0000-0000-0000-000000000000`,\n  label: \"3 x 3\",\n  value:\"3\"\n},\n{\n  id:`000000000000-0000-0000-0000-000000000000`,\n  label: \"4 x 4\",\n  value:\"4\"\n},\n{\n  id:`000000000000-0000-0000-0000-000000000000`,\n  label: \"5 x 5\",\n  value:\"5\"\n}]\n\nconst Game: React.FC = () => {\n  const [boardSize, setBoardSize] = useState(4);\n  const [gameMode, setGameMode] = useState<string>(\"ai\");\n  const [aiDifficulty, setAIDifficulty] = useState<string>(\"hard\");\n  const [boardSizeOptions, setBoardSizeOptions] = useState<BoardSizeConfiguration[]>(boardSizeConfigurations);\n  const [isTimerEnabled, setIsTimerEnabled] = useState(false);\n  const [timerDuration, setTimerDuration] = useState(30);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const gameBoard = () => {\n    // If game is over or board is empty, reset the board\n    navigate(\"/gameboard\",{state:{boardSize:boardSize, isAI: gameMode===\"ai\",\n      aiDifficulty:aiDifficulty,isTimerEnabled:isTimerEnabled,timerDuration:timerDuration,\n      gameMode:gameMode\n    }});\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  \n  const token = sessionStorage.getItem('token'); // Retrieve token from storage\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/tictactoe_game_service/client/configuration', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`, // Include the authorization header\n            'Content-Type': 'application/json'\n          },\n        });\n\n        console.log(\"Login successful:\", response.ok);\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const json = await response.json();\n        setBoardSize(json);\n        setBoardSizeOptions(json.boardSizeConfiguration);\n        setAIDifficulty(json);\n        setGameMode(json);\n      } catch (error) {\n        console.error(\"Fetching error:\", error);\n        // Handle the error appropriately, e.g., display an error message\n      }\n    };\n\n    if (token) {\n      fetchData();\n    } else {\n      // Handle the case where there is no token, e.g., redirect to login\n      console.warn('No token available, cannot fetch data.');\n    }\n  }, [token]); // Effect runs when token changes\n  \n\n  return (\n    <Box sx={{ textAlign: \"center\", py: 5 }}>\n      <Typography\n        variant=\"h4\"\n        gutterBottom\n        sx={{ fontFamily: \"Poppins\", mb: 2, fontWeight: \"bold\" }}\n      >\n        TicTacToe Game\n      </Typography>\n      {/* Divider */}\n      <div\n        style={{\n          width: \"100%\",\n          borderBottom: \"1px solid #e0e0e0\",\n          margin: \"0 auto 20px\",\n        }}\n      />\n      <Typography\n        variant=\"h6\"\n        gutterBottom\n        sx={{ fontFamily: \"Poppins\", mb: 0 }}\n      >\n        Configuration\n      </Typography>\n      <Configuration\n        boardSize={boardSize}\n        setBoardSize={setBoardSize}\n        gameMode={gameMode}\n        setGameMode={setGameMode}\n        aiDifficulty={aiDifficulty}\n        setAIDifficulty={setAIDifficulty}\n        boardSizeOptions={boardSizeOptions}\n        setBoardSizeOptions={setBoardSizeOptions}\n        isTimerEnabled={isTimerEnabled}\n        setIsTimerEnabled={setIsTimerEnabled}\n        timerDuration={timerDuration}\n        setTimerDuration={setTimerDuration}\n      />\n      {/* Divider */}\n      <div\n        style={{\n          width: \"100%\",\n          borderBottom: \"1px solid #e0e0e0\",\n          margin: \"0 auto 20px\",\n        }}\n      />\n      <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            fullWidth\n            disabled={loading}\n            onClick={gameBoard}\n            sx={{\n              mt: 2,\n              fontFamily: \"Poppins\",\n              fontWeight: \"bold\",\n              py: 1.5,\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            \"Play Game\"\n          </Button>\n\n      {/* <Board\n        boardSize={boardSize}\n        isAI={gameMode === \"ai\"}\n        aiDifficulty={aiDifficulty}\n        isTimerEnabled={isTimerEnabled}\n        timerDuration={timerDuration}\n        gameMode={gameMode}\n      /> */}\n    </Box>\n  );\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}