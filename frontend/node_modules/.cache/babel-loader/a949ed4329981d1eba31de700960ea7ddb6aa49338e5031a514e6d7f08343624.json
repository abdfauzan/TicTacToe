{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mfauz\\\\Documents\\\\TicTacToe\\\\frontend\\\\src\\\\pages\\\\Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Configuration from \"../components/Configuration\";\nimport { Box, Typography, Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst boardSizeConfigurations = [];\nconst aiDifficultyConfigurations = [];\nconst gameModeConfigurations = [];\nconst timeLeftConfigurations = [];\nconst Game = () => {\n  _s();\n  const [boardSize, setBoardSize] = useState(5);\n  const [gameModeOptions, setGameModeOptions] = useState(gameModeConfigurations);\n  const [aiDifficultyOptions, setAIDifficultyOptions] = useState(aiDifficultyConfigurations);\n  const [gameMode, setGameMode] = useState(\"ai\");\n  const [aiDifficulty, setAIDifficulty] = useState(\"hard\");\n  const [boardSizeOptions, setBoardSizeOptions] = useState(boardSizeConfigurations);\n  const [isTimerEnabled, setIsTimerEnabled] = useState(false);\n  // const [timerDuration, setTimerDuration] = useState(30);\n  const [loading, setLoading] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [timeLeftOptions, setTimeLeftOptions] = useState(timeLeftConfigurations);\n  const navigate = useNavigate();\n  const gameBoard = () => {\n    // If game is over or board is empty, reset the board\n    navigate(\"/gameboard\", {\n      state: {\n        boardSize: boardSize,\n        isAI: gameMode === \"ai\",\n        aiDifficulty: aiDifficulty,\n        isTimerEnabled: isTimerEnabled,\n        timeLeft: timeLeft,\n        gameMode: gameMode\n      }\n    });\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  const token = sessionStorage.getItem('token'); // Retrieve token from storage\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/tictactoe_game_service/client/configuration', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            // Include the authorization header\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log(\"Login successful:\", response.ok);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const json = await response.json();\n        setBoardSizeOptions(json.boardSizeConfiguration);\n        setAIDifficultyOptions(json.aiDifficulties);\n        setGameModeOptions(json.gameMode);\n      } catch (error) {\n        console.error(\"Fetching error:\", error);\n        // Handle the error appropriately, e.g., display an error message\n      }\n    };\n    if (token) {\n      fetchData();\n    } else {\n      // Handle the case where there is no token, e.g., redirect to login\n      console.warn('No token available, cannot fetch data.');\n    }\n  }, [token]); // Effect runs when token changes\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      textAlign: \"center\",\n      py: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      sx: {\n        fontFamily: \"Poppins\",\n        mb: 2,\n        fontWeight: \"bold\"\n      },\n      children: \"TicTacToe Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        borderBottom: \"1px solid #e0e0e0\",\n        margin: \"0 auto 20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      sx: {\n        fontFamily: \"Poppins\",\n        mb: 0\n      },\n      children: \"Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Configuration, {\n      boardSize: boardSize,\n      setBoardSize: setBoardSize,\n      gameMode: gameMode,\n      setGameMode: setGameMode,\n      aiDifficulty: aiDifficulty,\n      setAIDifficulty: setAIDifficulty,\n      boardSizeOptions: boardSizeOptions,\n      setBoardSizeOptions: setBoardSizeOptions,\n      isTimerEnabled: isTimerEnabled,\n      setIsTimerEnabled: setIsTimerEnabled,\n      timerDuration: timerDuration,\n      setTimerDuration: setTimerDuration,\n      gameModeOptions: gameModeOptions,\n      setGameModeOptions: setGameModeOptions,\n      aiDifficultyOptions: aiDifficultyOptions,\n      setAIDifficultyOptions: setAIDifficultyOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        borderBottom: \"1px solid #e0e0e0\",\n        margin: \"0 auto 20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: gameBoard,\n      sx: {\n        margin: 2,\n        fontFamily: \"Poppins\"\n      },\n      children: \"Play Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"6pKfAhfyUhmCDYm21xM/XgFRJIY=\", false, function () {\n  return [useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Configuration","Box","Typography","Button","useNavigate","jsxDEV","_jsxDEV","boardSizeConfigurations","aiDifficultyConfigurations","gameModeConfigurations","timeLeftConfigurations","Game","_s","boardSize","setBoardSize","gameModeOptions","setGameModeOptions","aiDifficultyOptions","setAIDifficultyOptions","gameMode","setGameMode","aiDifficulty","setAIDifficulty","boardSizeOptions","setBoardSizeOptions","isTimerEnabled","setIsTimerEnabled","loading","setLoading","timeLeft","setTimeLeft","timeLeftOptions","setTimeLeftOptions","navigate","gameBoard","state","isAI","token","sessionStorage","getItem","fetchData","response","fetch","method","headers","console","log","ok","Error","status","json","boardSizeConfiguration","aiDifficulties","error","warn","sx","textAlign","py","children","variant","gutterBottom","fontFamily","mb","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","style","width","borderBottom","margin","timerDuration","setTimerDuration","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mfauz/Documents/TicTacToe/frontend/src/pages/Game.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Board from \"../components/Board\";\nimport Configuration, { TimeLeft } from \"../components/Configuration\";\nimport { api } from \"../utils/api\";\nimport { Box, Typography, Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport {BoardSizeConfiguration,AIDifficulty,GameMode} from \"../components/Configuration\"\n\nconst boardSizeConfigurations: BoardSizeConfiguration[] = []\nconst aiDifficultyConfigurations: AIDifficulty[] = []\nconst gameModeConfigurations: GameMode[] = []\nconst timeLeftConfigurations: TimeLeft[] = []\n\nconst Game: React.FC = () => {\n  const [boardSize, setBoardSize] = useState(5);\n  const [gameModeOptions, setGameModeOptions] = useState<GameMode[]>(gameModeConfigurations);\n  const [aiDifficultyOptions, setAIDifficultyOptions] = useState<AIDifficulty[]>(aiDifficultyConfigurations);\n  const [gameMode, setGameMode] = useState<string>(\"ai\");\n  const [aiDifficulty, setAIDifficulty] = useState<string>(\"hard\");\n  const [boardSizeOptions, setBoardSizeOptions] = useState<BoardSizeConfiguration[]>(boardSizeConfigurations);\n  const [isTimerEnabled, setIsTimerEnabled] = useState(false);\n  // const [timerDuration, setTimerDuration] = useState(30);\n  const [loading, setLoading] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [timeLeftOptions, setTimeLeftOptions] = useState<TimeLeft[]>(timeLeftConfigurations);\n  const navigate = useNavigate();\n\n  const gameBoard = () => {\n    // If game is over or board is empty, reset the board\n    navigate(\"/gameboard\",{state:{boardSize:boardSize, isAI: gameMode===\"ai\",\n      aiDifficulty:aiDifficulty,isTimerEnabled:isTimerEnabled,timeLeft:timeLeft,\n      gameMode:gameMode\n    }});\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  \n  const token = sessionStorage.getItem('token'); // Retrieve token from storage\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/tictactoe_game_service/client/configuration', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`, // Include the authorization header\n            'Content-Type': 'application/json'\n          },\n        });\n\n        console.log(\"Login successful:\", response.ok);\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const json = await response.json();\n        setBoardSizeOptions(json.boardSizeConfiguration);\n        setAIDifficultyOptions(json.aiDifficulties);\n        setGameModeOptions(json.gameMode);\n      } catch (error) {\n        console.error(\"Fetching error:\", error);\n        // Handle the error appropriately, e.g., display an error message\n      }\n    };\n\n    if (token) {\n      fetchData();\n    } else {\n      // Handle the case where there is no token, e.g., redirect to login\n      console.warn('No token available, cannot fetch data.');\n    }\n  }, [token]); // Effect runs when token changes\n  \n\n  return (\n    <Box sx={{ textAlign: \"center\", py: 5 }}>\n      <Typography\n        variant=\"h4\"\n        gutterBottom\n        sx={{ fontFamily: \"Poppins\", mb: 2, fontWeight: \"bold\" }}\n      >\n        TicTacToe Game\n      </Typography>\n      {/* Divider */}\n      <div\n        style={{\n          width: \"100%\",\n          borderBottom: \"1px solid #e0e0e0\",\n          margin: \"0 auto 20px\",\n        }}\n      />\n      <Typography\n        variant=\"h6\"\n        gutterBottom\n        sx={{ fontFamily: \"Poppins\", mb: 0 }}\n      >\n        Configuration\n      </Typography>\n      <Configuration\n        boardSize={boardSize}\n        setBoardSize={setBoardSize}\n        gameMode={gameMode}\n        setGameMode={setGameMode}\n        aiDifficulty={aiDifficulty}\n        setAIDifficulty={setAIDifficulty}\n        boardSizeOptions={boardSizeOptions}\n        setBoardSizeOptions={setBoardSizeOptions}\n        isTimerEnabled={isTimerEnabled}\n        setIsTimerEnabled={setIsTimerEnabled}\n        timerDuration={timerDuration}\n        setTimerDuration={setTimerDuration}\n        gameModeOptions={gameModeOptions}\n        setGameModeOptions={setGameModeOptions}\n        aiDifficultyOptions={aiDifficultyOptions}\n        setAIDifficultyOptions={setAIDifficultyOptions}\n      />\n      {/* Divider */}\n      <div\n        style={{\n          width: \"100%\",\n          borderBottom: \"1px solid #e0e0e0\",\n          margin: \"0 auto 20px\",\n        }}\n      />\n          <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={gameBoard}\n                  sx={{ margin: 2, fontFamily: \"Poppins\" }}\n                >\n                  Play Game\n                </Button>\n\n      {/* <Board\n        boardSize={boardSize}\n        isAI={gameMode === \"ai\"}\n        aiDifficulty={aiDifficulty}\n        isTimerEnabled={isTimerEnabled}\n        timerDuration={timerDuration}\n        gameMode={gameMode}\n      /> */}\n    </Box>\n  );\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}