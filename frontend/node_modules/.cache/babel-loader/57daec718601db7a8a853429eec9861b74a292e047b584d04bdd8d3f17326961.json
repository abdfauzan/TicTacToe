{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mfauz\\\\Documents\\\\TicTacToe\\\\frontend\\\\src\\\\components\\\\UpdateBoardSize.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Box, Typography, useMediaQuery, CircularProgress, IconButton, InputAdornment } from \"@mui/material\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { api } from \"../utils/api\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateBoardSize = () => {\n  _s();\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const navigate = useNavigate();\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [confirmPasswordVisible, setConfirmPasswordVisible] = useState(false);\n  const [update, setUpdate] = useState(false);\n  const initialBoardSizeConfigurationState = {\n    id: null,\n    value: 0,\n    label: \"\",\n    createdAt: \"\",\n    updatedAt: \"\"\n  };\n  const [currentBoardSize, setCurrentBoardSizeConfiguration] = useState(initialBoardSizeConfigurationState);\n  const {\n    id\n  } = useParams();\n  const token = sessionStorage.getItem('token'); // Retrieve token from storage\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tictactoe_game_service/admin/board_size_configuration/' + id, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          // Include the authorization header\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(\"Fetch Data Success:\", response.ok);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const json = await response.json();\n      setCurrentBoardSizeConfiguration(json);\n    } catch (error) {\n      console.error(\"Fetching error:\", error);\n      // Handle the error appropriately, e.g., display an error message\n    }\n  };\n\n  // Fetch leaderboard data\n  useEffect(() => {\n    if (token && id) {\n      setUpdate(true);\n      fetchData();\n    } else {\n      setUpdate(false);\n    }\n  }, [id, update]);\n  const onSubmit = async data => {\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match.\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    try {\n      await api.post(\"/api/auth/signup\", {\n        ...data,\n        password\n      });\n      navigate(\"/login\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Signup failed:\", err);\n      setError((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Signup failed.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n  const toggleConfirmPasswordVisibility = () => {\n    setConfirmPasswordVisible(!confirmPasswordVisible);\n  };\n  const handleInputChange = ({\n    target\n  }) => {\n    const {\n      name,\n      value\n    } = target;\n    setCurrentBoardSizeConfiguration({\n      ...currentBoardSize,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"calc(100vh - 64px - 100px)\",\n      textAlign: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        maxWidth: 400,\n        p: 3,\n        bgcolor: \"background.paper\",\n        borderRadius: 2,\n        boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.1)\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        sx: {\n          fontFamily: \"Poppins\",\n          fontWeight: \"bold\",\n          textAlign: \"center\"\n        },\n        children: update ? \"Update\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          fontFamily: \"Poppins\",\n          color: \"text.secondary\",\n          mb: 3,\n          textAlign: \"center\"\n        },\n        children: update ? \"Update Board Size\" : \"Add Board Size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [update ? /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"UUID\",\n          fullWidth: true,\n          margin: \"normal\",\n          type: \"text\",\n          value: currentBoardSize.id,\n          disabled: true,\n          sx: {\n            \"& .MuiInputBase-input\": {\n              fontFamily: \"Poppins\"\n            },\n            \"& .MuiInputLabel-root\": {\n              fontFamily: \"Poppins\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Value\",\n          fullWidth: true,\n          margin: \"normal\",\n          type: \"text\",\n          value: currentBoardSize.value,\n          onChange: handleInputChange,\n          required: true,\n          sx: {\n            \"& .MuiInputBase-input\": {\n              fontFamily: \"Poppins\"\n            },\n            \"& .MuiInputLabel-root\": {\n              fontFamily: \"Poppins\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Value\",\n          fullWidth: true,\n          margin: \"normal\",\n          type: \"text\",\n          value: currentBoardSize.value,\n          onChange: handleInputChange,\n          required: true,\n          sx: {\n            \"& .MuiInputBase-input\": {\n              fontFamily: \"Poppins\"\n            },\n            \"& .MuiInputLabel-root\": {\n              fontFamily: \"Poppins\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Label\",\n          fullWidth: true,\n          margin: \"normal\",\n          type: \"text\",\n          value: currentBoardSize.label,\n          onChange: handleInputChange,\n          required: true,\n          sx: {\n            \"& .MuiInputBase-input\": {\n              fontFamily: \"Poppins\"\n            },\n            \"& .MuiInputLabel-root\": {\n              fontFamily: \"Poppins\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Confirm Password\",\n          fullWidth: true,\n          margin: \"normal\",\n          type: confirmPasswordVisible ? \"text\" : \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true,\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: toggleConfirmPasswordVisibility,\n                sx: {\n                  color: theme.palette.mode === \"dark\" ? \"rgba(255, 255, 255, 0.7)\" : \"rgba(0, 0, 0, 0.7)\"\n                },\n                children: confirmPasswordVisible ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)\n          },\n          sx: {\n            \"& .MuiInputBase-input\": {\n              fontFamily: \"Poppins\"\n            },\n            \"& .MuiInputLabel-root\": {\n              fontFamily: \"Poppins\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          ...register(\"username\"),\n          label: \"Username\",\n          fullWidth: true,\n          margin: \"normal\",\n          required: true,\n          sx: {\n            \"& .MuiInputBase-input\": {\n              fontFamily: \"Poppins\"\n            },\n            \"& .MuiInputLabel-root\": {\n              fontFamily: \"Poppins\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          fullWidth: true,\n          disabled: loading,\n          sx: {\n            mt: 2,\n            fontFamily: \"Poppins\",\n            fontWeight: \"bold\",\n            py: 1.5\n          },\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24,\n            sx: {\n              color: \"white\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this) : \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"error\",\n        sx: {\n          mt: 3,\n          fontFamily: \"Poppins\",\n          textAlign: \"center\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          mt: 3,\n          fontFamily: \"Poppins\",\n          textAlign: \"center\",\n          color: \"text.secondary\"\n        },\n        children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          color: \"primary\",\n          onClick: () => navigate(\"/login\"),\n          sx: {\n            fontFamily: \"Poppins\",\n            fontWeight: \"bold\"\n          },\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateBoardSize, \"fn0OFVtVfaiNugaufZEd0J8Tdqg=\", false, function () {\n  return [useForm, useNavigate, useTheme, useMediaQuery, useParams];\n});\n_c = UpdateBoardSize;\nexport default UpdateBoardSize;\nvar _c;\n$RefreshReg$(_c, \"UpdateBoardSize\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Box","Typography","useMediaQuery","CircularProgress","IconButton","InputAdornment","Visibility","VisibilityOff","api","useTheme","useForm","useNavigate","useParams","jsxDEV","_jsxDEV","UpdateBoardSize","_s","register","handleSubmit","navigate","theme","isSmallScreen","breakpoints","down","loading","setLoading","error","setError","password","setPassword","confirmPassword","setConfirmPassword","passwordVisible","setPasswordVisible","confirmPasswordVisible","setConfirmPasswordVisible","update","setUpdate","initialBoardSizeConfigurationState","id","value","label","createdAt","updatedAt","currentBoardSize","setCurrentBoardSizeConfiguration","token","sessionStorage","getItem","fetchData","response","fetch","method","headers","console","log","ok","Error","status","json","onSubmit","data","post","err","_err$response","_err$response$data","message","togglePasswordVisibility","toggleConfirmPasswordVisibility","handleInputChange","target","name","sx","display","flexDirection","flex","justifyContent","alignItems","minHeight","textAlign","children","maxWidth","p","bgcolor","borderRadius","boxShadow","variant","gutterBottom","fontFamily","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","color","mb","fullWidth","margin","type","disabled","onChange","required","e","InputProps","endAdornment","position","onClick","palette","mode","mt","py","size","_c","$RefreshReg$"],"sources":["C:/Users/mfauz/Documents/TicTacToe/frontend/src/components/UpdateBoardSize.tsx"],"sourcesContent":["import React, { ChangeEvent, useState, useEffect, useRef } from \"react\";\nimport {\n  TextField,\n  Button,\n  Box,\n  Typography,\n  Avatar,\n  useMediaQuery,\n  CircularProgress,\n  IconButton,\n  InputAdornment,\n} from \"@mui/material\";\nimport {\n  LockOutlined as LockIcon,\n  Visibility,\n  VisibilityOff,\n} from \"@mui/icons-material\";\nimport { api } from \"../utils/api\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { BoardSizeConfiguration } from \"./BoardSizeConfiguration\";\n\nconst UpdateBoardSize: React.FC = () => {\n  const { register, handleSubmit } = useForm();\n  const navigate = useNavigate();\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [confirmPasswordVisible, setConfirmPasswordVisible] = useState(false);\n\n  const [update, setUpdate] = useState(false);\n\n  const initialBoardSizeConfigurationState: BoardSizeConfiguration = {\n    id: null,\n    value: 0,\n    label: \"\",\n    createdAt: \"\",\n    updatedAt:\"\"\n};\n\nconst [currentBoardSize, setCurrentBoardSizeConfiguration] = useState<BoardSizeConfiguration>(initialBoardSizeConfigurationState);\n\n  const { id } = useParams();\n  const token = sessionStorage.getItem('token'); // Retrieve token from storage\n  const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/tictactoe_game_service/admin/board_size_configuration/'+id, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`, // Include the authorization header\n            'Content-Type': 'application/json'\n          },\n        });\n  \n        console.log(\"Fetch Data Success:\", response.ok);\n  \n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n  \n        const json = await response.json();\n        setCurrentBoardSizeConfiguration(json);\n      } catch (error) {\n        console.error(\"Fetching error:\", error);\n        // Handle the error appropriately, e.g., display an error message\n      }\n    };\n  \n    \n  \n    // Fetch leaderboard data\n    useEffect(() => {\n      if (token && id) {\n        setUpdate(true);\n        fetchData();\n      } else {\n        setUpdate(false);\n      }\n    }, [id, update]);\n\n  const onSubmit = async (data: any) => {\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match.\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    try {\n      await api.post(\"/api/auth/signup\", { ...data, password });\n      navigate(\"/login\");\n    } catch (err: any) {\n      console.error(\"Signup failed:\", err);\n      setError(\n        err?.response?.data?.message || \"Signup failed.\",\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  const toggleConfirmPasswordVisibility = () => {\n    setConfirmPasswordVisible(!confirmPasswordVisible);\n  };\n\n  const handleInputChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = target;\n    setCurrentBoardSizeConfiguration({ ...currentBoardSize, [name]: value });\n};\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        minHeight: \"calc(100vh - 64px - 100px)\",\n        textAlign: \"center\",\n      }}\n    >\n      <Box\n        sx={{\n          maxWidth: 400,\n          p: 3,\n          bgcolor: \"background.paper\",\n          borderRadius: 2,\n          boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.1)\",\n          textAlign: \"center\",\n        }}\n      >\n        <Typography\n          variant=\"h4\"\n          gutterBottom\n          sx={{\n            fontFamily: \"Poppins\",\n            fontWeight: \"bold\",\n            textAlign: \"center\",\n          }}\n        >\n          {update ? \"Update\" : \"Add\"}\n        </Typography>\n        <Typography\n          variant=\"body1\"\n          sx={{\n            fontFamily: \"Poppins\",\n            color: \"text.secondary\",\n            mb: 3,\n            textAlign: \"center\",\n          }}\n        >\n          {update ? \"Update Board Size\" : \"Add Board Size\"}\n        </Typography>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          {update ? (\n            <TextField\n            label=\"UUID\"\n            fullWidth\n            margin=\"normal\"\n            type=\"text\"\n            value={currentBoardSize.id}\n            disabled\n          \n            sx={{\n              \"& .MuiInputBase-input\": {\n                fontFamily: \"Poppins\",\n              },\n              \"& .MuiInputLabel-root\": {\n                fontFamily: \"Poppins\",\n              },\n            }}\n          />\n          ) : (\n            <Visibility />\n          )}\n          \n          <TextField\n            label=\"Value\"\n            fullWidth\n            margin=\"normal\"\n            type=\"text\"\n            value={currentBoardSize.value}\n            onChange={handleInputChange}\n            required\n          \n            sx={{\n              \"& .MuiInputBase-input\": {\n                fontFamily: \"Poppins\",\n              },\n              \"& .MuiInputLabel-root\": {\n                fontFamily: \"Poppins\",\n              },\n            }}\n          />\n          <TextField\n            label=\"Value\"\n            fullWidth\n            margin=\"normal\"\n            type=\"text\"\n            value={currentBoardSize.value}\n            onChange={handleInputChange}\n            required\n          \n            sx={{\n              \"& .MuiInputBase-input\": {\n                fontFamily: \"Poppins\",\n              },\n              \"& .MuiInputLabel-root\": {\n                fontFamily: \"Poppins\",\n              },\n            }}\n          />\n          <TextField\n            label=\"Label\"\n            fullWidth\n            margin=\"normal\"\n            type=\"text\"\n            value={currentBoardSize.label}\n            onChange={handleInputChange}\n            required\n          \n            sx={{\n              \"& .MuiInputBase-input\": {\n                fontFamily: \"Poppins\",\n              },\n              \"& .MuiInputLabel-root\": {\n                fontFamily: \"Poppins\",\n              },\n            }}\n          />\n          <TextField\n            label=\"Confirm Password\"\n            fullWidth\n            margin=\"normal\"\n            type={confirmPasswordVisible ? \"text\" : \"password\"}\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={toggleConfirmPasswordVisibility}\n                    sx={{\n                      color:\n                        theme.palette.mode === \"dark\"\n                          ? \"rgba(255, 255, 255, 0.7)\"\n                          : \"rgba(0, 0, 0, 0.7)\",\n                    }}\n                  >\n                    {confirmPasswordVisible ? (\n                      <VisibilityOff />\n                    ) : (\n                      <Visibility />\n                    )}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            sx={{\n              \"& .MuiInputBase-input\": {\n                fontFamily: \"Poppins\",\n              },\n              \"& .MuiInputLabel-root\": {\n                fontFamily: \"Poppins\",\n              },\n            }}\n          />\n          <TextField\n            {...register(\"username\")}\n            label=\"Username\"\n            fullWidth\n            margin=\"normal\"\n            required\n            sx={{\n              \"& .MuiInputBase-input\": {\n                fontFamily: \"Poppins\",\n              },\n              \"& .MuiInputLabel-root\": {\n                fontFamily: \"Poppins\",\n              },\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            fullWidth\n            disabled={loading}\n            sx={{\n              mt: 2,\n              fontFamily: \"Poppins\",\n              fontWeight: \"bold\",\n              py: 1.5,\n            }}\n          >\n            {loading ? (\n              <CircularProgress size={24} sx={{ color: \"white\" }} />\n            ) : (\n              \"Signup\"\n            )}\n          </Button>\n        </form>\n        {error && (\n          <Typography\n            variant=\"body2\"\n            color=\"error\"\n            sx={{\n              mt: 3,\n              fontFamily: \"Poppins\",\n              textAlign: \"center\",\n            }}\n          >\n            {error}\n          </Typography>\n        )}\n        <Typography\n          variant=\"body2\"\n          sx={{\n            mt: 3,\n            fontFamily: \"Poppins\",\n            textAlign: \"center\",\n            color: \"text.secondary\",\n          }}\n        >\n          Already have an account?{\" \"}\n          <Button\n            variant=\"text\"\n            color=\"primary\"\n            onClick={() => navigate(\"/login\")}\n            sx={{ fontFamily: \"Poppins\", fontWeight: \"bold\" }}\n          >\n            Log in\n          </Button>\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UpdateBoardSize;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}