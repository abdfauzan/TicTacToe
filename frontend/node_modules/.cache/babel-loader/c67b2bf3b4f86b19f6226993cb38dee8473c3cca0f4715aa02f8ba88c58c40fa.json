{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mfauz\\\\Documents\\\\TicTacToe\\\\frontend\\\\src\\\\components\\\\Board.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Cell from \"./Cell\";\nimport { calculateWinner } from \"../utils/helpers\";\nimport { getAIMove } from \"../utils/ai\";\nimport { Box, Typography, Button, CircularProgress } from \"@mui/material\";\nimport { useTheme } from \"@mui/system\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Board = ({\n  boardSize,\n  isAI,\n  aiDifficulty,\n  isTimerEnabled,\n  timeDuration,\n  gameMode\n}) => {\n  _s();\n  const [board, setBoard] = useState(Array.from({\n    length: boardSize\n  }, () => Array(boardSize).fill(\"\")));\n  const navigate = useNavigate();\n  const configurationBoard = () => {\n    navigate(\"/game\");\n  };\n  const [winner, setWinner] = useState(null);\n  const [isDraw, setIsDraw] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(timeDuration);\n  const [isTimerActive, setIsTimerActive] = useState(false);\n  const [isMatchmaking, setIsMatchmaking] = useState(false);\n  const [matchId, setMatchId] = useState(null);\n  const [opponent, setOpponent] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(null);\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const theme = useTheme();\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [moves, setMoves] = useState([]);\n  const [isPlayerTurn, setIsPlayerTurn] = useState(false);\n  const [playerSymbol, setPlayerSymbol] = useState(\"X\");\n  const [opponentSymbol, setOpponentSymbol] = useState(\"O\");\n  const [currentPlayer, setCurrentPlayer] = useState(\"X\");\n  const timeoutPollingInterval = useRef(null);\n  const pollingInterval = useRef(null);\n  const username = sessionStorage.getItem(\"TicTacToeUsername\");\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    resetBoard();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [boardSize, isAI, aiDifficulty, isTimerEnabled, timeDuration, gameMode]);\n  useEffect(() => {\n    if (isTimerActive && timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else if (isTimerActive && timeLeft === 0) {\n      handleTimeOut();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isTimerActive, timeLeft]);\n  useEffect(() => {\n    if (gameMode === \"online\" && matchId && matchStatus === \"active\") {\n      startPollingMatchState();\n      // Start polling for timeout\n      startPollingTimeout();\n    } else {\n      stopPollingMatchState();\n      stopPollingTimeout();\n    }\n    // Cleanup on unmount\n    return () => {\n      stopPollingMatchState();\n      stopPollingTimeout();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [gameMode, matchId, matchStatus]);\n  useEffect(() => {\n    if (!winner && !isDraw) {\n      if (gameMode === \"online\" || gameMode === \"local\") {\n        // For online and local modes, reset timer when turn changes\n        setTimeLeft(timeDuration);\n        setIsTimerActive(true);\n      } else if (gameMode === \"ai\" && isAI && currentPlayer === \"X\") {\n        // For AI mode, reset timer when it's the player's turn\n        setTimeLeft(timeDuration);\n        setIsTimerActive(true);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPlayerTurn, currentPlayer]);\n  useEffect(() => {}, [winner, isDraw, board, matchStatus, gameMode, isMatchmaking, username]);\n  const handleTimeOut = () => {\n    if (winner || isDraw) return;\n    if (gameMode === \"ai\" && isAI) {\n      setWinner(\"AI wins due to timeout!\");\n      handleAIMatchResult(\"loss\");\n    } else if (gameMode === \"online\") {\n      // Handle timeout in PvP\n      setWinner(opponent === null ? \"\" : `${opponent} wins due to timeout!`);\n      handlePVPMatchResult(opponent);\n      stopPollingMatchState();\n      stopPollingTimeout();\n    } else {\n      setWinner(`${isPlayerTurn ? \"Player 2\" : \"Player 1\"} wins due to timeout!`);\n    }\n    setIsTimerActive(false);\n  };\n\n  // 3 cases: play online PvP, play against AI, play locally PvP\n  const handleCellClick = (row, col) => {\n    if (board[row][col] || winner) return;\n    if (gameMode === \"online\") {\n      if (!isPlayerTurn) return;\n      setIsLoading(true);\n      syncMove(row, col);\n    } else if (isAI && gameMode === \"ai\") {\n      // AI Mode logic\n      if (currentPlayer !== \"X\") return;\n      const updatedBoard = board.map((r, i) => r.map((cell, j) => i === row && j === col ? currentPlayer : cell));\n      setBoard(updatedBoard);\n      const gameWinner = calculateWinner(updatedBoard);\n      if (gameWinner) {\n        const resultMessage = gameWinner === \"X\" ? \"Player X wins!\" : \"Player O wins!\";\n        setWinner(resultMessage);\n        handleAIMatchResult(gameWinner === \"X\" ? \"win\" : \"loss\");\n        setIsTimerActive(false);\n        return;\n      }\n      if (isBoardFull(updatedBoard)) {\n        setIsDraw(true);\n        handleAIMatchResult(\"draw\");\n        setIsTimerActive(false);\n        return;\n      }\n      setCurrentPlayer(\"O\");\n      setTimeLeft(timeDuration);\n\n      // AI's turn\n      setTimeout(() => {\n        const aiMove = getAIMove(updatedBoard, aiDifficulty);\n        if (aiMove) {\n          const aiUpdatedBoard = updatedBoard.map((r, i) => r.map((cell, j) => i === aiMove.row && j === aiMove.col ? \"O\" : cell));\n          setBoard(aiUpdatedBoard);\n          const aiWinner = calculateWinner(aiUpdatedBoard);\n          if (aiWinner) {\n            setWinner(\"AI wins!\");\n            handleAIMatchResult(\"loss\"); // Player loses to AI\n            setIsTimerActive(false);\n            return;\n          }\n          if (isBoardFull(aiUpdatedBoard)) {\n            setIsDraw(true);\n            handleAIMatchResult(\"draw\"); // Draw condition\n            setIsTimerActive(false);\n            return;\n          }\n          setCurrentPlayer(\"X\");\n          setTimeLeft(timeDuration);\n        }\n      }, 300);\n    } else if (gameMode === \"local\") {\n      // Local game\n      const symbol = isPlayerTurn ? playerSymbol : opponentSymbol;\n      const updatedBoard = board.map((r, i) => r.map((cell, j) => i === row && j === col ? symbol : cell));\n      setBoard(updatedBoard);\n      const gameWinner = calculateWinner(updatedBoard);\n      if (gameWinner) {\n        const resultMessage = gameWinner === playerSymbol ? \"Player 1 wins!\" : \"Player 2 wins!\";\n        setWinner(resultMessage);\n        setIsTimerActive(false);\n        return;\n      }\n      if (isBoardFull(updatedBoard)) {\n        setIsDraw(true);\n        setIsTimerActive(false);\n        return;\n      }\n      setIsPlayerTurn(!isPlayerTurn);\n      setTimeLeft(timeDuration);\n    }\n  };\n  const handleAIMatchResult = async result => {\n    if (!username) return;\n  };\n  const handlePVPMatchResult = async winnerUsername => {\n    if (!matchId || !username) return;\n  };\n  const isBoardFull = board => {\n    return board.every(row => row.every(cell => cell !== \"\"));\n  };\n  const resetBoard = () => {\n    // If game is over or board is empty, reset the board\n    setBoard(Array.from({\n      length: boardSize\n    }, () => Array(boardSize).fill(\"\")));\n    setWinner(null);\n    setIsDraw(false);\n    setTimeLeft(timeLeft);\n    setIsTimerActive(true);\n    setIsMatchmaking(false);\n    setMatchId(null);\n    setOpponent(null);\n    setMatchStatus(null);\n    setMoves([]);\n    setIsPlayerTurn(true);\n    setPlayerSymbol(\"X\");\n    setOpponentSymbol(\"O\");\n    setCurrentPlayer(\"X\");\n    stopPollingMatchState();\n    stopPollingTimeout();\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const startTimer = () => {\n    setTimeLeft(30);\n    setIsTimerActive(true);\n  };\n  const startMatchmaking = async () => {\n    const token = sessionStorage.getItem(\"token\");\n    if (!token || !username) {\n      alert(\"You must be logged in to start matchmaking with another player.\");\n      setIsMatchmaking(false);\n      return;\n    }\n    setIsMatchmaking(true);\n  };\n  const checkMatchmakingStatus = async () => {};\n  const fetchMatchState = async () => {\n    if (!matchId) return;\n  };\n  const syncMove = async (row, col) => {\n    if (!matchId || !username) {\n      setIsLoading(false);\n      return;\n    }\n    try {\n      const response = await fetch(\"https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/match/move\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          matchId,\n          player: username,\n          move: {\n            row,\n            column: col\n          }\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        fetchMatchState();\n      } else {\n        console.error(\"Error syncing move:\", data);\n        alert(data.error || \"Error syncing move\");\n      }\n    } catch (error) {\n      console.error(\"Error syncing move:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleMatchTimeout = async () => {\n    if (!matchId || !username) return;\n    try {\n      const response = await fetch(\"https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/match/timeout\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          matchId,\n          player: username\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        if (data.winner) {\n          setWinner(data.winner === null ? \"Match ended due to timeout - Please try again\" : data.winner === username ? \"You win by timeout!\" : `${opponent} wins by timeout!`);\n          handlePVPMatchResult(data.winner);\n          stopPollingMatchState();\n          stopPollingTimeout();\n          setIsTimerActive(false);\n        }\n      } else {\n        console.error(\"Error checking timeout:\", data);\n      }\n    } catch (error) {\n      console.error(\"Error checking timeout:\", error);\n    }\n  };\n\n  // Function to start polling for timeout\n  const startPollingTimeout = () => {\n    if (timeoutPollingInterval.current) return;\n    timeoutPollingInterval.current = setInterval(handleMatchTimeout, 5000);\n  };\n  const stopPollingTimeout = () => {\n    if (timeoutPollingInterval.current) {\n      clearInterval(timeoutPollingInterval.current);\n      timeoutPollingInterval.current = null;\n    }\n  };\n  const startPollingMatchState = () => {\n    if (pollingInterval.current) return;\n    pollingInterval.current = setInterval(fetchMatchState, 2000);\n  };\n  const stopPollingMatchState = () => {\n    if (pollingInterval.current) {\n      clearInterval(pollingInterval.current);\n      pollingInterval.current = null;\n    }\n  };\n\n  // Format timeLeft into MM:SS\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60).toString().padStart(2, \"0\");\n    const secs = (seconds % 60).toString().padStart(2, \"0\");\n    return `${mins}:${secs}`;\n  };\n\n  // Calculate progress percentage\n  const progressPercentage = timeLeft / timeDuration * 100;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: \"relative\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    },\n    children: [gameMode === \"online\" && !matchId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isMatchmaking && /*#__PURE__*/_jsxDEV(CircularProgress, {\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: startMatchmaking,\n        sx: {\n          mb: 2\n        },\n        disabled: isMatchmaking,\n        children: isMatchmaking ? \"Searching for opponent...\" : \"Start Matchmaking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), (gameMode !== \"online\" || opponent) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          fontFamily: \"Poppins\",\n          mt: 2\n        },\n        children: gameMode === \"online\" && opponent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"You (\", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: playerSymbol === \"X\" ? \"#1976d2\" : \"red\",\n              fontWeight: \"bold\"\n            },\n            children: playerSymbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 17\n          }, this), \") vs \", opponent, \" (\", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: opponentSymbol === \"X\" ? \"#1976d2\" : \"red\",\n              fontWeight: \"bold\"\n            },\n            children: opponentSymbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 17\n          }, this), \")\"]\n        }, void 0, true) : isAI ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Player (\", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"#1976d2\",\n              fontWeight: \"bold\"\n            },\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 17\n          }, this), \") vs AI (\", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontWeight: \"bold\"\n            },\n            children: \"O\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 17\n          }, this), \")\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Player 1 (\", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"#1976d2\",\n              fontWeight: \"bold\"\n            },\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 17\n          }, this), \") vs Player 2 (\", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontWeight: \"bold\"\n            },\n            children: \"O\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 17\n          }, this), \")\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          fontFamily: \"Poppins\",\n          mt: 2\n        },\n        children: winner || isDraw ? \"Game Over\" : gameMode === \"local\" ? isPlayerTurn ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"#1976d2\"\n            },\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 19\n          }, this), \"'s Turn\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"O\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 19\n          }, this), \"'s Turn\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 17\n        }, this) : isPlayerTurn ? \"Your Turn\" : gameMode === \"online\" ? `${opponent}'s Turn` : isAI ? \"AI's Turn\" : \"Opponent's Turn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 11\n      }, this), isTimerActive && !winner && !isDraw && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: \"relative\",\n          display: \"inline-flex\",\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          variant: \"determinate\",\n          value: progressPercentage,\n          size: 80,\n          thickness: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            position: \"absolute\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            color: \"textSecondary\",\n            children: formatTime(timeLeft)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"grid\",\n        gridTemplateColumns: `repeat(${boardSize}, 1fr)`,\n        gap: \"1px\",\n        mt: 2\n      },\n      children: board.map((row, i) => row.map((cell, j) => /*#__PURE__*/_jsxDEV(Cell, {\n        value: cell,\n        onClick: () => handleCellClick(i, j)\n      }, `${i}-${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 7\n    }, this), winner && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        mt: 2\n      },\n      color: \"success.main\",\n      children: winner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 9\n    }, this), isDraw && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        mt: 2\n      },\n      color: \"warning.main\",\n      children: \"It's a draw!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: configurationBoard,\n      sx: {\n        margin: 2,\n        fontFamily: \"Poppins\"\n      },\n      children: \"Back to Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: resetBoard,\n      sx: {\n        margin: 2,\n        fontFamily: \"Poppins\"\n      },\n      children: \"Reset Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"rgba(128, 128, 128, 0.5)\",\n        zIndex: 9999,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 411,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"iybMZmoYS+uO329kL4UYwkcUqZs=\", false, function () {\n  return [useNavigate, useTheme];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Cell","calculateWinner","getAIMove","Box","Typography","Button","CircularProgress","useTheme","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","boardSize","isAI","aiDifficulty","isTimerEnabled","timeDuration","gameMode","_s","board","setBoard","Array","from","length","fill","navigate","configurationBoard","winner","setWinner","isDraw","setIsDraw","timeLeft","setTimeLeft","isTimerActive","setIsTimerActive","isMatchmaking","setIsMatchmaking","matchId","setMatchId","opponent","setOpponent","matchStatus","setMatchStatus","theme","moves","setMoves","isPlayerTurn","setIsPlayerTurn","playerSymbol","setPlayerSymbol","opponentSymbol","setOpponentSymbol","currentPlayer","setCurrentPlayer","timeoutPollingInterval","pollingInterval","username","sessionStorage","getItem","isLoading","setIsLoading","resetBoard","timer","setTimeout","clearTimeout","handleTimeOut","startPollingMatchState","startPollingTimeout","stopPollingMatchState","stopPollingTimeout","handleAIMatchResult","handlePVPMatchResult","handleCellClick","row","col","syncMove","updatedBoard","map","r","i","cell","j","gameWinner","resultMessage","isBoardFull","aiMove","aiUpdatedBoard","aiWinner","symbol","result","winnerUsername","every","startTimer","startMatchmaking","token","alert","checkMatchmakingStatus","fetchMatchState","response","fetch","method","headers","Authorization","body","JSON","stringify","player","move","column","data","json","ok","console","error","handleMatchTimeout","current","setInterval","clearInterval","formatTime","seconds","mins","Math","floor","toString","padStart","secs","progressPercentage","sx","position","display","flexDirection","alignItems","justifyContent","height","children","mb","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","onClick","disabled","fontFamily","mt","style","fontWeight","value","size","thickness","top","left","bottom","right","component","gridTemplateColumns","gap","margin","width","backgroundColor","zIndex","_c","$RefreshReg$"],"sources":["C:/Users/mfauz/Documents/TicTacToe/frontend/src/components/Board.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Cell from \"./Cell\";\nimport { calculateWinner } from \"../utils/helpers\";\nimport { getAIMove } from \"../utils/ai\";\nimport {\n  Box,\n  Typography,\n  Button,\n  CircularProgress\n} from \"@mui/material\";\nimport { useTheme } from \"@mui/system\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface BoardProps {\n  boardSize: number;\n  isAI: boolean;\n  aiDifficulty: string;\n  isTimerEnabled: boolean;\n  timeDuration: number;\n  gameMode: string;\n}\n\nconst Board: React.FC<BoardProps> = ({\n  boardSize,\n  isAI,\n  aiDifficulty,\n  isTimerEnabled,\n  timeDuration,\n  gameMode,\n}) => {\n  const [board, setBoard] = useState(\n    Array.from({ length: boardSize }, () => Array(boardSize).fill(\"\")),\n  );\n  const navigate = useNavigate();\n  const configurationBoard = () => {\n    navigate(\"/game\");\n  };\n\n  const [winner, setWinner] = useState<string | null>(null);\n  const [isDraw, setIsDraw] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(timeDuration);\n  const [isTimerActive, setIsTimerActive] = useState(false);\n  const [isMatchmaking, setIsMatchmaking] = useState(false);\n  const [matchId, setMatchId] = useState<string | null>(null);\n  const [opponent, setOpponent] = useState<string | null>(null);\n  const [matchStatus, setMatchStatus] = useState<\n    \"waiting\" | \"active\" | \"complete\" | null\n  >(null);\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const theme = useTheme();\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [moves, setMoves] = useState<any[]>([]);\n  const [isPlayerTurn, setIsPlayerTurn] = useState<boolean>(false);\n  const [playerSymbol, setPlayerSymbol] = useState<\"X\" | \"O\">(\"X\");\n  const [opponentSymbol, setOpponentSymbol] = useState<\"X\" | \"O\">(\"O\");\n  const [currentPlayer, setCurrentPlayer] = useState<\"X\" | \"O\">(\"X\");\n  const timeoutPollingInterval = useRef<NodeJS.Timeout | null>(null);\n  const pollingInterval = useRef<NodeJS.Timeout | null>(null);\n  const username = sessionStorage.getItem(\"TicTacToeUsername\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    resetBoard();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [boardSize, isAI, aiDifficulty, isTimerEnabled, timeDuration, gameMode]);\n\n  useEffect(() => {\n    if (isTimerActive && timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else if (isTimerActive && timeLeft === 0) {\n      handleTimeOut();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isTimerActive, timeLeft]);\n\n  useEffect(() => {\n    if (gameMode === \"online\" && matchId && matchStatus === \"active\") {\n      startPollingMatchState();\n      // Start polling for timeout\n      startPollingTimeout();\n    } else {\n      stopPollingMatchState();\n      stopPollingTimeout();\n    }\n    // Cleanup on unmount\n    return () => {\n      stopPollingMatchState();\n      stopPollingTimeout();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [gameMode, matchId, matchStatus]);\n\n  useEffect(() => {\n    if (!winner && !isDraw) {\n      if (gameMode === \"online\" || gameMode === \"local\") {\n        // For online and local modes, reset timer when turn changes\n        setTimeLeft(timeDuration);\n        setIsTimerActive(true);\n      } else if (gameMode === \"ai\" && isAI && currentPlayer === \"X\") {\n        // For AI mode, reset timer when it's the player's turn\n        setTimeLeft(timeDuration);\n        setIsTimerActive(true);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPlayerTurn, currentPlayer]);\n\n  useEffect(() => {\n    \n  }, [winner, isDraw, board, matchStatus, gameMode, isMatchmaking, username]);\n\n  const handleTimeOut = () => {\n    if (winner || isDraw) return;\n\n    if (gameMode === \"ai\" && isAI) {\n      setWinner(\"AI wins due to timeout!\");\n      handleAIMatchResult(\"loss\");\n    } else if (gameMode === \"online\") {\n      // Handle timeout in PvP\n      setWinner(opponent === null ? \"\" : `${opponent} wins due to timeout!`);\n      handlePVPMatchResult(opponent!);\n      stopPollingMatchState();\n      stopPollingTimeout();\n    } else {\n      setWinner(\n        `${isPlayerTurn ? \"Player 2\" : \"Player 1\"} wins due to timeout!`,\n      );\n    }\n    setIsTimerActive(false);\n  };\n\n  // 3 cases: play online PvP, play against AI, play locally PvP\n  const handleCellClick = (row: number, col: number) => {\n    if (board[row][col] || winner) return;\n\n    if (gameMode === \"online\") {\n      if (!isPlayerTurn) return;\n      setIsLoading(true);\n      syncMove(row, col);\n    } else if (isAI && gameMode === \"ai\") {\n      // AI Mode logic\n      if (currentPlayer !== \"X\") return;\n\n      const updatedBoard = board.map((r, i) =>\n        r.map((cell, j) => (i === row && j === col ? currentPlayer : cell)),\n      );\n      setBoard(updatedBoard);\n\n      const gameWinner = calculateWinner(updatedBoard);\n      if (gameWinner) {\n        const resultMessage =\n          gameWinner === \"X\" ? \"Player X wins!\" : \"Player O wins!\";\n        setWinner(resultMessage);\n\n        handleAIMatchResult(gameWinner === \"X\" ? \"win\" : \"loss\");\n        setIsTimerActive(false);\n        return;\n      }\n\n      if (isBoardFull(updatedBoard)) {\n        setIsDraw(true);\n        handleAIMatchResult(\"draw\");\n        setIsTimerActive(false);\n        return;\n      }\n\n      setCurrentPlayer(\"O\");\n      setTimeLeft(timeDuration);\n\n      // AI's turn\n      setTimeout(() => {\n        const aiMove = getAIMove(updatedBoard, aiDifficulty);\n        if (aiMove) {\n          const aiUpdatedBoard = updatedBoard.map((r, i) =>\n            r.map((cell, j) =>\n              i === aiMove.row && j === aiMove.col ? \"O\" : cell,\n            ),\n          );\n          setBoard(aiUpdatedBoard);\n\n          const aiWinner = calculateWinner(aiUpdatedBoard);\n\n          if (aiWinner) {\n            setWinner(\"AI wins!\");\n            handleAIMatchResult(\"loss\"); // Player loses to AI\n            setIsTimerActive(false);\n            return;\n          }\n\n          if (isBoardFull(aiUpdatedBoard)) {\n            setIsDraw(true);\n            handleAIMatchResult(\"draw\"); // Draw condition\n            setIsTimerActive(false);\n            return;\n          }\n\n          setCurrentPlayer(\"X\");\n          setTimeLeft(timeDuration);\n        }\n      }, 300);\n    } else if (gameMode === \"local\") {\n      // Local game\n      const symbol = isPlayerTurn ? playerSymbol : opponentSymbol;\n      const updatedBoard = board.map((r, i) =>\n        r.map((cell, j) => (i === row && j === col ? symbol : cell)),\n      );\n      setBoard(updatedBoard);\n\n      const gameWinner = calculateWinner(updatedBoard);\n      if (gameWinner) {\n        const resultMessage =\n          gameWinner === playerSymbol ? \"Player 1 wins!\" : \"Player 2 wins!\";\n        setWinner(resultMessage);\n        setIsTimerActive(false);\n        return;\n      }\n\n      if (isBoardFull(updatedBoard)) {\n        setIsDraw(true);\n        setIsTimerActive(false);\n        return;\n      }\n\n      setIsPlayerTurn(!isPlayerTurn);\n      setTimeLeft(timeDuration);\n    }\n  };\n\n  const handleAIMatchResult = async (result: \"win\" | \"loss\" | \"draw\") => {\n    if (!username) return;\n\n  };\n\n  const handlePVPMatchResult = async (winnerUsername: string) => {\n    if (!matchId || !username) return;\n\n  };\n\n  const isBoardFull = (board: string[][]): boolean => {\n    return board.every((row) => row.every((cell) => cell !== \"\"));\n  };\n\n  const resetBoard = () => {\n    // If game is over or board is empty, reset the board\n    setBoard(\n      Array.from({ length: boardSize }, () => Array(boardSize).fill(\"\")),\n    );\n    setWinner(null);\n    setIsDraw(false);\n    setTimeLeft(timeLeft);\n    setIsTimerActive(true);\n    setIsMatchmaking(false);\n    setMatchId(null);\n    setOpponent(null);\n    setMatchStatus(null);\n    setMoves([]);\n    setIsPlayerTurn(true);\n    setPlayerSymbol(\"X\");\n    setOpponentSymbol(\"O\");\n    setCurrentPlayer(\"X\");\n    stopPollingMatchState();\n    stopPollingTimeout();\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const startTimer = () => {\n    setTimeLeft(30);\n    setIsTimerActive(true);\n  };\n\n  const startMatchmaking = async () => {\n    const token = sessionStorage.getItem(\"token\");\n\n    if (!token || !username) {\n      alert(\"You must be logged in to start matchmaking with another player.\");\n      setIsMatchmaking(false);\n      return;\n    }\n\n    setIsMatchmaking(true);\n  };\n\n  const checkMatchmakingStatus = async () => {\n    \n  };\n\n  const fetchMatchState = async () => {\n    if (!matchId) return;\n  };\n\n  const syncMove = async (row: number, col: number) => {\n    if (!matchId || !username) {\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        \"https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/match/move\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n          },\n          body: JSON.stringify({\n            matchId,\n            player: username,\n            move: { row, column: col },\n          }),\n        },\n      );\n\n      const data = await response.json();\n\n      if (response.ok) {\n        fetchMatchState();\n      } else {\n        console.error(\"Error syncing move:\", data);\n        alert(data.error || \"Error syncing move\");\n      }\n    } catch (error) {\n      console.error(\"Error syncing move:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleMatchTimeout = async () => {\n    if (!matchId || !username) return;\n\n    try {\n      const response = await fetch(\n        \"https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/match/timeout\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n          },\n          body: JSON.stringify({\n            matchId,\n            player: username,\n          }),\n        },\n      );\n\n      const data = await response.json();\n\n      if (response.ok) {\n        if (data.winner) {\n          setWinner(\n            data.winner === null\n              ? \"Match ended due to timeout - Please try again\"\n              : data.winner === username\n                ? \"You win by timeout!\"\n                : `${opponent} wins by timeout!`,\n          );\n          handlePVPMatchResult(data.winner);\n          stopPollingMatchState();\n          stopPollingTimeout();\n          setIsTimerActive(false);\n        }\n      } else {\n        console.error(\"Error checking timeout:\", data);\n      }\n    } catch (error) {\n      console.error(\"Error checking timeout:\", error);\n    }\n  };\n\n  // Function to start polling for timeout\n  const startPollingTimeout = () => {\n    if (timeoutPollingInterval.current) return;\n    timeoutPollingInterval.current = setInterval(handleMatchTimeout, 5000);\n  };\n\n  const stopPollingTimeout = () => {\n    if (timeoutPollingInterval.current) {\n      clearInterval(timeoutPollingInterval.current);\n      timeoutPollingInterval.current = null;\n    }\n  };\n\n  const startPollingMatchState = () => {\n    if (pollingInterval.current) return;\n    pollingInterval.current = setInterval(fetchMatchState, 2000);\n  };\n\n  const stopPollingMatchState = () => {\n    if (pollingInterval.current) {\n      clearInterval(pollingInterval.current);\n      pollingInterval.current = null;\n    }\n  };\n\n  // Format timeLeft into MM:SS\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60)\n      .toString()\n      .padStart(2, \"0\");\n    const secs = (seconds % 60).toString().padStart(2, \"0\");\n    return `${mins}:${secs}`;\n  };\n\n  // Calculate progress percentage\n  const progressPercentage = (timeLeft / timeDuration) * 100;\n\n  return (\n    <Box\n      sx={{\n        position: \"relative\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\",\n      }}\n    >\n      {gameMode === \"online\" && !matchId && (\n        <>\n          {isMatchmaking && <CircularProgress sx={{ mb: 2 }} />}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={startMatchmaking}\n            sx={{ mb: 2 }}\n            disabled={isMatchmaking}\n          >\n            {isMatchmaking ? \"Searching for opponent...\" : \"Start Matchmaking\"}\n          </Button>\n        </>\n      )}\n\n      {/* New Labels */}\n      {(gameMode !== \"online\" || opponent) && (\n        <>\n          <Typography variant=\"h6\" sx={{ fontFamily: \"Poppins\", mt: 2 }}>\n            {gameMode === \"online\" && opponent ? (\n              <>\n                You (\n                <span\n                  style={{\n                    color: playerSymbol === \"X\" ? \"#1976d2\" : \"red\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {playerSymbol}\n                </span>\n                ) vs {opponent} (\n                <span\n                  style={{\n                    color: opponentSymbol === \"X\" ? \"#1976d2\" : \"red\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {opponentSymbol}\n                </span>\n                )\n              </>\n            ) : isAI ? (\n              <>\n                Player (\n                <span style={{ color: \"#1976d2\", fontWeight: \"bold\" }}>X</span>)\n                vs AI (\n                <span style={{ color: \"red\", fontWeight: \"bold\" }}>O</span>)\n              </>\n            ) : (\n              <>\n                Player 1 (\n                <span style={{ color: \"#1976d2\", fontWeight: \"bold\" }}>X</span>)\n                vs Player 2 (\n                <span style={{ color: \"red\", fontWeight: \"bold\" }}>O</span>)\n              </>\n            )}\n          </Typography>\n          <Typography variant=\"h6\" sx={{ fontFamily: \"Poppins\", mt: 2 }}>\n            {winner || isDraw ? (\n              \"Game Over\"\n            ) : gameMode === \"local\" ? (\n              isPlayerTurn ? (\n                <span>\n                  <span style={{ color: \"#1976d2\" }}>X</span>'s Turn\n                </span>\n              ) : (\n                <span>\n                  <span style={{ color: \"red\" }}>O</span>'s Turn\n                </span>\n              )\n            ) : isPlayerTurn ? (\n              \"Your Turn\"\n            ) : gameMode === \"online\" ? (\n              `${opponent}'s Turn`\n            ) : isAI ? (\n              \"AI's Turn\"\n            ) : (\n              \"Opponent's Turn\"\n            )}\n          </Typography>\n\n          {/* Timer with Progress Circle */}\n          {isTimerActive && !winner && !isDraw && (\n            <Box\n              sx={{\n                position: \"relative\",\n                display: \"inline-flex\",\n                mt: 2,\n              }}\n            >\n              <CircularProgress\n                variant=\"determinate\"\n                value={progressPercentage}\n                size={80}\n                thickness={5}\n              />\n              <Box\n                sx={{\n                  top: 0,\n                  left: 0,\n                  bottom: 0,\n                  right: 0,\n                  position: \"absolute\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Typography variant=\"h6\" component=\"div\" color=\"textSecondary\">\n                  {formatTime(timeLeft)}\n                </Typography>\n              </Box>\n            </Box>\n          )}\n        </>\n      )}\n\n      <Box\n        sx={{\n          display: \"grid\",\n          gridTemplateColumns: `repeat(${boardSize}, 1fr)`,\n          gap: \"1px\",\n          mt: 2,\n        }}\n      >\n        {board.map((row, i) =>\n          row.map((cell, j) => (\n            <Cell\n              key={`${i}-${j}`}\n              value={cell}\n              onClick={() => handleCellClick(i, j)}\n            />\n          )),\n        )}\n      </Box>\n      {winner && (\n        <Typography variant=\"h6\" sx={{ mt: 2 }} color=\"success.main\">\n          {winner}\n        </Typography>\n      )}\n      {isDraw && (\n        <Typography variant=\"h6\" sx={{ mt: 2 }} color=\"warning.main\">\n          It's a draw!\n        </Typography>\n      )}\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={configurationBoard}\n        sx={{ margin: 2, fontFamily: \"Poppins\" }}\n      >\n        Back to Configuration\n      </Button>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={resetBoard}\n        sx={{ margin: 2, fontFamily: \"Poppins\" }}\n      >\n        Reset Board\n      </Button>\n     \n\n      {/* Loading Spinner Overlay */}\n      {isLoading && (\n        <Box\n          sx={{\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(128, 128, 128, 0.5)\",\n            zIndex: 9999,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <CircularProgress />\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}