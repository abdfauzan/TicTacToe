{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import Cell from\"./Cell\";import{calculateWinner}from\"../utils/helpers\";import{getAIMove}from\"../utils/ai\";import{Box,Typography,Button,CircularProgress// eslint-disable-next-line @typescript-eslint/no-unused-vars\n}from\"@mui/material\";import{useTheme}from\"@mui/system\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Board=_ref=>{let{boardSize,isAI,aiDifficulty,isTimerEnabled,timerDuration,gameMode}=_ref;const[board,setBoard]=useState(Array.from({length:boardSize},()=>Array(boardSize).fill(\"\")));const navigate=useNavigate();const configurationBoard=()=>{// If game is over or board is empty, reset the board\nnavigate(\"/game\");};const[winner,setWinner]=useState(null);const[isDraw,setIsDraw]=useState(false);const[timeLeft,setTimeLeft]=useState(30);const[isTimerActive,setIsTimerActive]=useState(false);const[isMatchmaking,setIsMatchmaking]=useState(false);const[matchId,setMatchId]=useState(null);const[opponent,setOpponent]=useState(null);const[matchStatus,setMatchStatus]=useState(null);// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst theme=useTheme();// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst[moves,setMoves]=useState([]);const[isPlayerTurn,setIsPlayerTurn]=useState(false);const[playerSymbol,setPlayerSymbol]=useState(\"X\");const[opponentSymbol,setOpponentSymbol]=useState(\"O\");const[currentPlayer,setCurrentPlayer]=useState(\"X\");const timeoutPollingInterval=useRef(null);const pollingInterval=useRef(null);const username=sessionStorage.getItem(\"TicTacToeUsername\");const[isLoading,setIsLoading]=useState(false);useEffect(()=>{resetBoard();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[boardSize,isAI,aiDifficulty,isTimerEnabled,timerDuration,gameMode]);useEffect(()=>{if(isTimerActive&&timeLeft>0){const timer=setTimeout(()=>setTimeLeft(timeLeft-1),1000);return()=>clearTimeout(timer);}else if(isTimerActive&&timeLeft===0){handleTimeOut();}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[isTimerActive,timeLeft]);useEffect(()=>{if(gameMode===\"online\"&&matchId&&matchStatus===\"active\"){startPollingMatchState();// Start polling for timeout\nstartPollingTimeout();}else{stopPollingMatchState();stopPollingTimeout();}// Cleanup on unmount\nreturn()=>{stopPollingMatchState();stopPollingTimeout();};// eslint-disable-next-line react-hooks/exhaustive-deps\n},[gameMode,matchId,matchStatus]);useEffect(()=>{if(!winner&&!isDraw){if(gameMode===\"online\"||gameMode===\"local\"){// For online and local modes, reset timer when turn changes\nsetTimeLeft(30);setIsTimerActive(true);}else if(gameMode===\"ai\"&&isAI&&currentPlayer===\"X\"){// For AI mode, reset timer when it's the player's turn\nsetTimeLeft(30);setIsTimerActive(true);}}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[isPlayerTurn,currentPlayer]);useEffect(()=>{const handleBeforeUnload=e=>{const url=\"https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/matchmaking/cancel\";fetch(url,{method:\"POST\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${sessionStorage.getItem(\"token\")}`},body:JSON.stringify({player:username}),keepalive:true}).catch(error=>{console.error(\"Error canceling matchmaking:\",error);});e.preventDefault();e.returnValue=\"\";};window.addEventListener(\"beforeunload\",handleBeforeUnload);// Cleanup\nreturn()=>{window.removeEventListener(\"beforeunload\",handleBeforeUnload);};},[winner,isDraw,board,matchStatus,gameMode,isMatchmaking,username]);const handleTimeOut=()=>{if(winner||isDraw)return;if(gameMode===\"ai\"&&isAI){setWinner(\"AI wins due to timeout!\");handleAIMatchResult(\"loss\");}else if(gameMode===\"online\"){// Handle timeout in PvP\nsetWinner(opponent===null?\"\":`${opponent} wins due to timeout!`);handlePVPMatchResult(opponent);stopPollingMatchState();stopPollingTimeout();}else{setWinner(`${isPlayerTurn?\"Player 2\":\"Player 1\"} wins due to timeout!`);}setIsTimerActive(false);};// 3 cases: play online PvP, play against AI, play locally PvP\nconst handleCellClick=(row,col)=>{if(board[row][col]||winner)return;if(gameMode===\"online\"){if(!isPlayerTurn)return;setIsLoading(true);syncMove(row,col);}else if(isAI&&gameMode===\"ai\"){// AI Mode logic\nif(currentPlayer!==\"X\")return;const updatedBoard=board.map((r,i)=>r.map((cell,j)=>i===row&&j===col?currentPlayer:cell));setBoard(updatedBoard);const gameWinner=calculateWinner(updatedBoard);if(gameWinner){const resultMessage=gameWinner===\"X\"?\"Player X wins!\":\"Player O wins!\";setWinner(resultMessage);handleAIMatchResult(gameWinner===\"X\"?\"win\":\"loss\");setIsTimerActive(false);return;}if(isBoardFull(updatedBoard)){setIsDraw(true);handleAIMatchResult(\"draw\");setIsTimerActive(false);return;}setCurrentPlayer(\"O\");setTimeLeft(timerDuration);// AI's turn\nsetTimeout(()=>{const aiMove=getAIMove(updatedBoard,aiDifficulty);if(aiMove){const aiUpdatedBoard=updatedBoard.map((r,i)=>r.map((cell,j)=>i===aiMove.row&&j===aiMove.col?\"O\":cell));setBoard(aiUpdatedBoard);const aiWinner=calculateWinner(aiUpdatedBoard);if(aiWinner){setWinner(\"AI wins!\");handleAIMatchResult(\"loss\");// Player loses to AI\nsetIsTimerActive(false);return;}if(isBoardFull(aiUpdatedBoard)){setIsDraw(true);handleAIMatchResult(\"draw\");// Draw condition\nsetIsTimerActive(false);return;}setCurrentPlayer(\"X\");setTimeLeft(timerDuration);}},300);}else if(gameMode===\"local\"){// Local game\nconst symbol=isPlayerTurn?playerSymbol:opponentSymbol;const updatedBoard=board.map((r,i)=>r.map((cell,j)=>i===row&&j===col?symbol:cell));setBoard(updatedBoard);const gameWinner=calculateWinner(updatedBoard);if(gameWinner){const resultMessage=gameWinner===playerSymbol?\"Player 1 wins!\":\"Player 2 wins!\";setWinner(resultMessage);setIsTimerActive(false);return;}if(isBoardFull(updatedBoard)){setIsDraw(true);setIsTimerActive(false);return;}setIsPlayerTurn(!isPlayerTurn);setTimeLeft(timerDuration);}};const handleAIMatchResult=async result=>{if(!username)return;try{const response=await fetch(\"https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/ai-match\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${sessionStorage.getItem(\"token\")}`},body:JSON.stringify({player:username,result,difficulty:aiDifficulty})});if(!response.ok){console.error(\"Failed to update leaderboard:\",await response.json());}}catch(error){console.error(\"Error updating leaderboard:\",error);}};const handlePVPMatchResult=async winnerUsername=>{if(!matchId||!username)return;try{const response=await fetch(\"https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/match/finish\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${sessionStorage.getItem(\"token\")}`},body:JSON.stringify({matchId,winner:winnerUsername})});if(!response.ok){console.error(\"Failed to finish match:\",await response.json());}}catch(error){console.error(\"Error finishing match:\",error);}};const isBoardFull=board=>{return board.every(row=>row.every(cell=>cell!==\"\"));};const resetBoard=()=>{// If game is over or board is empty, reset the board\nsetBoard(Array.from({length:boardSize},()=>Array(boardSize).fill(\"\")));setWinner(null);setIsDraw(false);setTimeLeft(30);setIsTimerActive(true);setIsMatchmaking(false);setMatchId(null);setOpponent(null);setMatchStatus(null);setMoves([]);setIsPlayerTurn(true);setPlayerSymbol(\"X\");setOpponentSymbol(\"O\");setCurrentPlayer(\"X\");stopPollingMatchState();stopPollingTimeout();};// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst startTimer=()=>{setTimeLeft(30);setIsTimerActive(true);};const startMatchmaking=async()=>{const token=sessionStorage.getItem(\"token\");if(!token||!username){alert(\"You must be logged in to start matchmaking with another player.\");setIsMatchmaking(false);return;}setIsMatchmaking(true);try{const response=await fetch(\"https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/matchmaking\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${sessionStorage.getItem(\"token\")}`},body:JSON.stringify({player:username})});const data=await response.json();if(response.status===200){// Match found immediately\nsetMatchId(data.matchId);setOpponent(data.opponent);setMatchStatus(\"active\");// Determine symbols based on who was the first player\nif(data.player===username){// You are the first player\nsetPlayerSymbol(\"X\");setOpponentSymbol(\"O\");setIsPlayerTurn(true);}else{// You are the second player\nsetPlayerSymbol(\"O\");setOpponentSymbol(\"X\");setIsPlayerTurn(false);}alert(\"Match found! Opponent: \"+data.opponent);}else if(response.status===202){// Searching for opponent\nsetMatchStatus(\"waiting\");setPlayerSymbol(\"X\");setOpponentSymbol(\"O\");setIsPlayerTurn(true);checkMatchmakingStatus();}else if(response.status===401){alert(\"You must be logged in to start matchmaking.\");setIsMatchmaking(false);return;}else{console.error(\"Matchmaking error:\",data);setIsMatchmaking(false);}}catch(error){console.error(\"Matchmaking error:\",error);setIsMatchmaking(false);}};const checkMatchmakingStatus=async()=>{try{const response=await fetch(`https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/matchmaking/status?player=${username}`,{headers:{Authorization:`Bearer ${sessionStorage.getItem(\"token\")}`}});const data=await response.json();if(response.ok){if(data.matchId){// Match found\nsetMatchId(data.matchId);setOpponent(data.opponent);setMatchStatus(\"active\");// Symbols and turn have already been set when matchmaking started\nalert(\"Match found! Opponent: \"+data.opponent);}else if(data.message===\"Still searching for an opponent...\"){setTimeout(checkMatchmakingStatus,2000);}else{setIsMatchmaking(false);alert(\"No matchmaking in progress.\");}}else{console.error(\"Error checking matchmaking status:\",data);setIsMatchmaking(false);}}catch(error){console.error(\"Error checking matchmaking status:\",error);setIsMatchmaking(false);}};const fetchMatchState=async()=>{if(!matchId)return;try{const response=await fetch(`https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/match/state?matchId=${matchId}`,{headers:{Authorization:`Bearer ${sessionStorage.getItem(\"token\")}`}});const data=await response.json();if(response.ok){setMoves(data.moves);setMatchStatus(data.status);updateBoardFromMoves(data.moves);// Determine if it's the player's turn based on the number of moves\nconst totalMoves=data.moves.length;const isMyTurn=totalMoves%2===0&&playerSymbol===\"X\"||totalMoves%2===1&&playerSymbol===\"O\";setIsPlayerTurn(isMyTurn);if(data.winner){setWinner(data.winner===username?\"You win!\":`${opponent} wins!`);stopPollingMatchState();stopPollingTimeout();setIsTimerActive(false);}else if(data.status===\"complete\"){setIsDraw(true);stopPollingMatchState();stopPollingTimeout();setIsTimerActive(false);}}else{console.error(\"Error fetching match state:\",data);}}catch(error){console.error(\"Error fetching match state:\",error);}};const updateBoardFromMoves=moves=>{const newBoard=Array.from({length:boardSize},()=>Array(boardSize).fill(\"\"));moves.forEach(move=>{const symbol=move.player===username?playerSymbol:opponentSymbol;newBoard[move.move.row][move.move.column]=symbol;});setBoard(newBoard);const gameWinner=calculateWinner(newBoard);if(gameWinner){const winnerUsername=gameWinner===playerSymbol?username:opponent;setWinner(winnerUsername===username?\"You win!\":`${opponent} wins!`);handlePVPMatchResult(winnerUsername);stopPollingMatchState();stopPollingTimeout();setIsTimerActive(false);}else if(isBoardFull(newBoard)){setIsDraw(true);handlePVPMatchResult(\"draw\");stopPollingMatchState();stopPollingTimeout();setIsTimerActive(false);}};const syncMove=async(row,col)=>{if(!matchId||!username){setIsLoading(false);return;}try{const response=await fetch(\"https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/match/move\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${sessionStorage.getItem(\"token\")}`},body:JSON.stringify({matchId,player:username,move:{row,column:col}})});const data=await response.json();if(response.ok){fetchMatchState();}else{console.error(\"Error syncing move:\",data);alert(data.error||\"Error syncing move\");}}catch(error){console.error(\"Error syncing move:\",error);}finally{setIsLoading(false);}};const handleMatchTimeout=async()=>{if(!matchId||!username)return;try{const response=await fetch(\"https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/match/timeout\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${sessionStorage.getItem(\"token\")}`},body:JSON.stringify({matchId,player:username})});const data=await response.json();if(response.ok){if(data.winner){setWinner(data.winner===null?\"Match ended due to timeout - Please try again\":data.winner===username?\"You win by timeout!\":`${opponent} wins by timeout!`);handlePVPMatchResult(data.winner);stopPollingMatchState();stopPollingTimeout();setIsTimerActive(false);}}else{console.error(\"Error checking timeout:\",data);}}catch(error){console.error(\"Error checking timeout:\",error);}};// Function to start polling for timeout\nconst startPollingTimeout=()=>{if(timeoutPollingInterval.current)return;timeoutPollingInterval.current=setInterval(handleMatchTimeout,5000);};const stopPollingTimeout=()=>{if(timeoutPollingInterval.current){clearInterval(timeoutPollingInterval.current);timeoutPollingInterval.current=null;}};const startPollingMatchState=()=>{if(pollingInterval.current)return;pollingInterval.current=setInterval(fetchMatchState,2000);};const stopPollingMatchState=()=>{if(pollingInterval.current){clearInterval(pollingInterval.current);pollingInterval.current=null;}};// Format timeLeft into MM:SS\nconst formatTime=seconds=>{const mins=Math.floor(seconds/60).toString().padStart(2,\"0\");const secs=(seconds%60).toString().padStart(2,\"0\");return`${mins}:${secs}`;};// Calculate progress percentage\nconst progressPercentage=timeLeft/30*100;return/*#__PURE__*/_jsxs(Box,{sx:{position:\"relative\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",height:\"100%\"},children:[gameMode===\"online\"&&!matchId&&/*#__PURE__*/_jsxs(_Fragment,{children:[isMatchmaking&&/*#__PURE__*/_jsx(CircularProgress,{sx:{mb:2}}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:startMatchmaking,sx:{mb:2},disabled:isMatchmaking,children:isMatchmaking?\"Searching for opponent...\":\"Start Matchmaking\"})]}),(gameMode!==\"online\"||opponent)&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{fontFamily:\"Poppins\",mt:2},children:gameMode===\"online\"&&opponent?/*#__PURE__*/_jsxs(_Fragment,{children:[\"You (\",/*#__PURE__*/_jsx(\"span\",{style:{color:playerSymbol===\"X\"?\"#1976d2\":\"red\",fontWeight:\"bold\"},children:playerSymbol}),\") vs \",opponent,\" (\",/*#__PURE__*/_jsx(\"span\",{style:{color:opponentSymbol===\"X\"?\"#1976d2\":\"red\",fontWeight:\"bold\"},children:opponentSymbol}),\")\"]}):isAI?/*#__PURE__*/_jsxs(_Fragment,{children:[\"Player (\",/*#__PURE__*/_jsx(\"span\",{style:{color:\"#1976d2\",fontWeight:\"bold\"},children:\"X\"}),\") vs AI (\",/*#__PURE__*/_jsx(\"span\",{style:{color:\"red\",fontWeight:\"bold\"},children:\"O\"}),\")\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[\"Player 1 (\",/*#__PURE__*/_jsx(\"span\",{style:{color:\"#1976d2\",fontWeight:\"bold\"},children:\"X\"}),\") vs Player 2 (\",/*#__PURE__*/_jsx(\"span\",{style:{color:\"red\",fontWeight:\"bold\"},children:\"O\"}),\")\"]})}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{fontFamily:\"Poppins\",mt:2},children:winner||isDraw?\"Game Over\":gameMode===\"local\"?isPlayerTurn?/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{color:\"#1976d2\"},children:\"X\"}),\"'s Turn\"]}):/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{color:\"red\"},children:\"O\"}),\"'s Turn\"]}):isPlayerTurn?\"Your Turn\":gameMode===\"online\"?`${opponent}'s Turn`:isAI?\"AI's Turn\":\"Opponent's Turn\"}),isTimerActive&&!winner&&!isDraw&&/*#__PURE__*/_jsxs(Box,{sx:{position:\"relative\",display:\"inline-flex\",mt:2},children:[/*#__PURE__*/_jsx(CircularProgress,{variant:\"determinate\",value:progressPercentage,size:80,thickness:5}),/*#__PURE__*/_jsx(Box,{sx:{top:0,left:0,bottom:0,right:0,position:\"absolute\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\"},children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"div\",color:\"textSecondary\",children:formatTime(timeLeft)})})]})]}),/*#__PURE__*/_jsx(Box,{sx:{display:\"grid\",gridTemplateColumns:`repeat(${boardSize}, 1fr)`,gap:\"1px\",mt:2},children:board.map((row,i)=>row.map((cell,j)=>/*#__PURE__*/_jsx(Cell,{value:cell,onClick:()=>handleCellClick(i,j)},`${i}-${j}`)))}),winner&&/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mt:2},color:\"success.main\",children:winner}),isDraw&&/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mt:2},color:\"warning.main\",children:\"It's a draw!\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:configurationBoard,sx:{margin:2,fontFamily:\"Poppins\"},children:\"Back to Configuration\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:resetBoard,sx:{margin:2,fontFamily:\"Poppins\"},children:\"Reset Board\"}),/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\",borderBottom:\"1px solid #e0e0e0\",margin:\"0 auto 20px\"}}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontFamily:\"Poppins\",margin:\"20px\"},children:\"Please use a wide screen like a laptop or desktop for the best experience. Thank you for playing Tic Tac Toe Pro today! \\uD83D\\uDE80\"}),isLoading&&/*#__PURE__*/_jsx(Box,{sx:{position:\"fixed\",top:0,left:0,width:\"100%\",height:\"100%\",backgroundColor:\"rgba(128, 128, 128, 0.5)\",zIndex:9999,display:\"flex\",alignItems:\"center\",justifyContent:\"center\"},children:/*#__PURE__*/_jsx(CircularProgress,{})})]});};export default Board;","map":{"version":3,"names":["React","useState","useEffect","useRef","Cell","calculateWinner","getAIMove","Box","Typography","Button","CircularProgress","useTheme","useNavigate","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Board","_ref","boardSize","isAI","aiDifficulty","isTimerEnabled","timerDuration","gameMode","board","setBoard","Array","from","length","fill","navigate","configurationBoard","winner","setWinner","isDraw","setIsDraw","timeLeft","setTimeLeft","isTimerActive","setIsTimerActive","isMatchmaking","setIsMatchmaking","matchId","setMatchId","opponent","setOpponent","matchStatus","setMatchStatus","theme","moves","setMoves","isPlayerTurn","setIsPlayerTurn","playerSymbol","setPlayerSymbol","opponentSymbol","setOpponentSymbol","currentPlayer","setCurrentPlayer","timeoutPollingInterval","pollingInterval","username","sessionStorage","getItem","isLoading","setIsLoading","resetBoard","timer","setTimeout","clearTimeout","handleTimeOut","startPollingMatchState","startPollingTimeout","stopPollingMatchState","stopPollingTimeout","handleBeforeUnload","e","url","fetch","method","headers","Authorization","body","JSON","stringify","player","keepalive","catch","error","console","preventDefault","returnValue","window","addEventListener","removeEventListener","handleAIMatchResult","handlePVPMatchResult","handleCellClick","row","col","syncMove","updatedBoard","map","r","i","cell","j","gameWinner","resultMessage","isBoardFull","aiMove","aiUpdatedBoard","aiWinner","symbol","result","response","difficulty","ok","json","winnerUsername","every","startTimer","startMatchmaking","token","alert","data","status","checkMatchmakingStatus","message","fetchMatchState","updateBoardFromMoves","totalMoves","isMyTurn","newBoard","forEach","move","column","handleMatchTimeout","current","setInterval","clearInterval","formatTime","seconds","mins","Math","floor","toString","padStart","secs","progressPercentage","sx","position","display","flexDirection","alignItems","justifyContent","height","children","mb","variant","color","onClick","disabled","fontFamily","mt","style","fontWeight","value","size","thickness","top","left","bottom","right","component","gridTemplateColumns","gap","margin","width","borderBottom","backgroundColor","zIndex"],"sources":["C:/Users/mfauz/Documents/TicTacToe/frontend/src/components/Board.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Cell from \"./Cell\";\nimport { calculateWinner } from \"../utils/helpers\";\nimport { getAIMove } from \"../utils/ai\";\nimport {\n  Box,\n  Typography,\n  Button,\n  CircularProgress,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  LinearProgress,\n} from \"@mui/material\";\nimport { useTheme } from \"@mui/system\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface BoardProps {\n  boardSize: number;\n  isAI: boolean;\n  aiDifficulty: string;\n  isTimerEnabled: boolean;\n  timerDuration: number;\n  gameMode: string;\n}\n\nconst Board: React.FC<BoardProps> = ({\n  boardSize,\n  isAI,\n  aiDifficulty,\n  isTimerEnabled,\n  timerDuration,\n  gameMode,\n}) => {\n  const [board, setBoard] = useState(\n    Array.from({ length: boardSize }, () => Array(boardSize).fill(\"\")),\n  );\n  const navigate = useNavigate();\n  const configurationBoard = () => {\n    // If game is over or board is empty, reset the board\n    navigate(\"/game\");\n  };\n\n  const [winner, setWinner] = useState<string | null>(null);\n  const [isDraw, setIsDraw] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [isTimerActive, setIsTimerActive] = useState(false);\n  const [isMatchmaking, setIsMatchmaking] = useState(false);\n  const [matchId, setMatchId] = useState<string | null>(null);\n  const [opponent, setOpponent] = useState<string | null>(null);\n  const [matchStatus, setMatchStatus] = useState<\n    \"waiting\" | \"active\" | \"complete\" | null\n  >(null);\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const theme = useTheme();\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [moves, setMoves] = useState<any[]>([]);\n  const [isPlayerTurn, setIsPlayerTurn] = useState<boolean>(false);\n  const [playerSymbol, setPlayerSymbol] = useState<\"X\" | \"O\">(\"X\");\n  const [opponentSymbol, setOpponentSymbol] = useState<\"X\" | \"O\">(\"O\");\n  const [currentPlayer, setCurrentPlayer] = useState<\"X\" | \"O\">(\"X\");\n  const timeoutPollingInterval = useRef<NodeJS.Timeout | null>(null);\n  const pollingInterval = useRef<NodeJS.Timeout | null>(null);\n  const username = sessionStorage.getItem(\"TicTacToeUsername\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    resetBoard();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [boardSize, isAI, aiDifficulty, isTimerEnabled, timerDuration, gameMode]);\n\n  useEffect(() => {\n    if (isTimerActive && timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else if (isTimerActive && timeLeft === 0) {\n      handleTimeOut();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isTimerActive, timeLeft]);\n\n  useEffect(() => {\n    if (gameMode === \"online\" && matchId && matchStatus === \"active\") {\n      startPollingMatchState();\n      // Start polling for timeout\n      startPollingTimeout();\n    } else {\n      stopPollingMatchState();\n      stopPollingTimeout();\n    }\n    // Cleanup on unmount\n    return () => {\n      stopPollingMatchState();\n      stopPollingTimeout();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [gameMode, matchId, matchStatus]);\n\n  useEffect(() => {\n    if (!winner && !isDraw) {\n      if (gameMode === \"online\" || gameMode === \"local\") {\n        // For online and local modes, reset timer when turn changes\n        setTimeLeft(30);\n        setIsTimerActive(true);\n      } else if (gameMode === \"ai\" && isAI && currentPlayer === \"X\") {\n        // For AI mode, reset timer when it's the player's turn\n        setTimeLeft(30);\n        setIsTimerActive(true);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPlayerTurn, currentPlayer]);\n\n  useEffect(() => {\n    const handleBeforeUnload = (e: BeforeUnloadEvent) => {\n      const url =\n        \"https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/matchmaking/cancel\";\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n        },\n        body: JSON.stringify({ player: username }),\n        keepalive: true,\n      }).catch((error) => {\n        console.error(\"Error canceling matchmaking:\", error);\n      });\n\n      e.preventDefault();\n      e.returnValue = \"\";\n    };\n\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, [winner, isDraw, board, matchStatus, gameMode, isMatchmaking, username]);\n\n  const handleTimeOut = () => {\n    if (winner || isDraw) return;\n\n    if (gameMode === \"ai\" && isAI) {\n      setWinner(\"AI wins due to timeout!\");\n      handleAIMatchResult(\"loss\");\n    } else if (gameMode === \"online\") {\n      // Handle timeout in PvP\n      setWinner(opponent === null ? \"\" : `${opponent} wins due to timeout!`);\n      handlePVPMatchResult(opponent!);\n      stopPollingMatchState();\n      stopPollingTimeout();\n    } else {\n      setWinner(\n        `${isPlayerTurn ? \"Player 2\" : \"Player 1\"} wins due to timeout!`,\n      );\n    }\n    setIsTimerActive(false);\n  };\n\n  // 3 cases: play online PvP, play against AI, play locally PvP\n  const handleCellClick = (row: number, col: number) => {\n    if (board[row][col] || winner) return;\n\n    if (gameMode === \"online\") {\n      if (!isPlayerTurn) return;\n      setIsLoading(true);\n      syncMove(row, col);\n    } else if (isAI && gameMode === \"ai\") {\n      // AI Mode logic\n      if (currentPlayer !== \"X\") return;\n\n      const updatedBoard = board.map((r, i) =>\n        r.map((cell, j) => (i === row && j === col ? currentPlayer : cell)),\n      );\n      setBoard(updatedBoard);\n\n      const gameWinner = calculateWinner(updatedBoard);\n      if (gameWinner) {\n        const resultMessage =\n          gameWinner === \"X\" ? \"Player X wins!\" : \"Player O wins!\";\n        setWinner(resultMessage);\n\n        handleAIMatchResult(gameWinner === \"X\" ? \"win\" : \"loss\");\n        setIsTimerActive(false);\n        return;\n      }\n\n      if (isBoardFull(updatedBoard)) {\n        setIsDraw(true);\n        handleAIMatchResult(\"draw\");\n        setIsTimerActive(false);\n        return;\n      }\n\n      setCurrentPlayer(\"O\");\n      setTimeLeft(timerDuration);\n\n      // AI's turn\n      setTimeout(() => {\n        const aiMove = getAIMove(updatedBoard, aiDifficulty);\n        if (aiMove) {\n          const aiUpdatedBoard = updatedBoard.map((r, i) =>\n            r.map((cell, j) =>\n              i === aiMove.row && j === aiMove.col ? \"O\" : cell,\n            ),\n          );\n          setBoard(aiUpdatedBoard);\n\n          const aiWinner = calculateWinner(aiUpdatedBoard);\n\n          if (aiWinner) {\n            setWinner(\"AI wins!\");\n            handleAIMatchResult(\"loss\"); // Player loses to AI\n            setIsTimerActive(false);\n            return;\n          }\n\n          if (isBoardFull(aiUpdatedBoard)) {\n            setIsDraw(true);\n            handleAIMatchResult(\"draw\"); // Draw condition\n            setIsTimerActive(false);\n            return;\n          }\n\n          setCurrentPlayer(\"X\");\n          setTimeLeft(timerDuration);\n        }\n      }, 300);\n    } else if (gameMode === \"local\") {\n      // Local game\n      const symbol = isPlayerTurn ? playerSymbol : opponentSymbol;\n      const updatedBoard = board.map((r, i) =>\n        r.map((cell, j) => (i === row && j === col ? symbol : cell)),\n      );\n      setBoard(updatedBoard);\n\n      const gameWinner = calculateWinner(updatedBoard);\n      if (gameWinner) {\n        const resultMessage =\n          gameWinner === playerSymbol ? \"Player 1 wins!\" : \"Player 2 wins!\";\n        setWinner(resultMessage);\n        setIsTimerActive(false);\n        return;\n      }\n\n      if (isBoardFull(updatedBoard)) {\n        setIsDraw(true);\n        setIsTimerActive(false);\n        return;\n      }\n\n      setIsPlayerTurn(!isPlayerTurn);\n      setTimeLeft(timerDuration);\n    }\n  };\n\n  const handleAIMatchResult = async (result: \"win\" | \"loss\" | \"draw\") => {\n    if (!username) return;\n\n    try {\n      const response = await fetch(\n        \"https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/ai-match\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n          },\n          body: JSON.stringify({\n            player: username,\n            result,\n            difficulty: aiDifficulty,\n          }),\n        },\n      );\n\n      if (!response.ok) {\n        console.error(\"Failed to update leaderboard:\", await response.json());\n      }\n    } catch (error) {\n      console.error(\"Error updating leaderboard:\", error);\n    }\n  };\n\n  const handlePVPMatchResult = async (winnerUsername: string) => {\n    if (!matchId || !username) return;\n\n    try {\n      const response = await fetch(\n        \"https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/match/finish\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n          },\n          body: JSON.stringify({\n            matchId,\n            winner: winnerUsername,\n          }),\n        },\n      );\n\n      if (!response.ok) {\n        console.error(\"Failed to finish match:\", await response.json());\n      }\n    } catch (error) {\n      console.error(\"Error finishing match:\", error);\n    }\n  };\n\n  const isBoardFull = (board: string[][]): boolean => {\n    return board.every((row) => row.every((cell) => cell !== \"\"));\n  };\n\n  const resetBoard = () => {\n    // If game is over or board is empty, reset the board\n    setBoard(\n      Array.from({ length: boardSize }, () => Array(boardSize).fill(\"\")),\n    );\n    setWinner(null);\n    setIsDraw(false);\n    setTimeLeft(30);\n    setIsTimerActive(true);\n    setIsMatchmaking(false);\n    setMatchId(null);\n    setOpponent(null);\n    setMatchStatus(null);\n    setMoves([]);\n    setIsPlayerTurn(true);\n    setPlayerSymbol(\"X\");\n    setOpponentSymbol(\"O\");\n    setCurrentPlayer(\"X\");\n    stopPollingMatchState();\n    stopPollingTimeout();\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const startTimer = () => {\n    setTimeLeft(30);\n    setIsTimerActive(true);\n  };\n\n  const startMatchmaking = async () => {\n    const token = sessionStorage.getItem(\"token\");\n\n    if (!token || !username) {\n      alert(\"You must be logged in to start matchmaking with another player.\");\n      setIsMatchmaking(false);\n      return;\n    }\n\n    setIsMatchmaking(true);\n\n    try {\n      const response = await fetch(\n        \"https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/matchmaking\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n          },\n          body: JSON.stringify({\n            player: username,\n          }),\n        },\n      );\n\n      const data = await response.json();\n\n      if (response.status === 200) {\n        // Match found immediately\n        setMatchId(data.matchId);\n        setOpponent(data.opponent);\n        setMatchStatus(\"active\");\n\n        // Determine symbols based on who was the first player\n        if (data.player === username) {\n          // You are the first player\n          setPlayerSymbol(\"X\");\n          setOpponentSymbol(\"O\");\n          setIsPlayerTurn(true);\n        } else {\n          // You are the second player\n          setPlayerSymbol(\"O\");\n          setOpponentSymbol(\"X\");\n          setIsPlayerTurn(false);\n        }\n\n        alert(\"Match found! Opponent: \" + data.opponent);\n      } else if (response.status === 202) {\n        // Searching for opponent\n        setMatchStatus(\"waiting\");\n        setPlayerSymbol(\"X\");\n        setOpponentSymbol(\"O\");\n        setIsPlayerTurn(true);\n        checkMatchmakingStatus();\n      } else if (response.status === 401) {\n        alert(\"You must be logged in to start matchmaking.\");\n        setIsMatchmaking(false);\n        return;\n      } else {\n        console.error(\"Matchmaking error:\", data);\n        setIsMatchmaking(false);\n      }\n    } catch (error) {\n      console.error(\"Matchmaking error:\", error);\n      setIsMatchmaking(false);\n    }\n  };\n\n  const checkMatchmakingStatus = async () => {\n    try {\n      const response = await fetch(\n        `https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/matchmaking/status?player=${username}`,\n        {\n          headers: {\n            Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n          },\n        },\n      );\n\n      const data = await response.json();\n\n      if (response.ok) {\n        if (data.matchId) {\n          // Match found\n          setMatchId(data.matchId);\n          setOpponent(data.opponent);\n          setMatchStatus(\"active\");\n\n          // Symbols and turn have already been set when matchmaking started\n          alert(\"Match found! Opponent: \" + data.opponent);\n        } else if (data.message === \"Still searching for an opponent...\") {\n          setTimeout(checkMatchmakingStatus, 2000);\n        } else {\n          setIsMatchmaking(false);\n          alert(\"No matchmaking in progress.\");\n        }\n      } else {\n        console.error(\"Error checking matchmaking status:\", data);\n        setIsMatchmaking(false);\n      }\n    } catch (error) {\n      console.error(\"Error checking matchmaking status:\", error);\n      setIsMatchmaking(false);\n    }\n  };\n\n  const fetchMatchState = async () => {\n    if (!matchId) return;\n\n    try {\n      const response = await fetch(\n        `https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/match/state?matchId=${matchId}`,\n        {\n          headers: {\n            Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n          },\n        },\n      );\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setMoves(data.moves);\n        setMatchStatus(data.status);\n\n        updateBoardFromMoves(data.moves);\n\n        // Determine if it's the player's turn based on the number of moves\n        const totalMoves = data.moves.length;\n        const isMyTurn =\n          (totalMoves % 2 === 0 && playerSymbol === \"X\") ||\n          (totalMoves % 2 === 1 && playerSymbol === \"O\");\n\n        setIsPlayerTurn(isMyTurn);\n\n        if (data.winner) {\n          setWinner(\n            data.winner === username ? \"You win!\" : `${opponent} wins!`,\n          );\n          stopPollingMatchState();\n          stopPollingTimeout();\n          setIsTimerActive(false);\n        } else if (data.status === \"complete\") {\n          setIsDraw(true);\n          stopPollingMatchState();\n          stopPollingTimeout();\n          setIsTimerActive(false);\n        }\n      } else {\n        console.error(\"Error fetching match state:\", data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching match state:\", error);\n    }\n  };\n\n  const updateBoardFromMoves = (moves: any[]) => {\n    const newBoard = Array.from({ length: boardSize }, () =>\n      Array(boardSize).fill(\"\"),\n    );\n\n    moves.forEach((move) => {\n      const symbol = move.player === username ? playerSymbol : opponentSymbol;\n      newBoard[move.move.row][move.move.column] = symbol;\n    });\n\n    setBoard(newBoard);\n\n    const gameWinner = calculateWinner(newBoard);\n    if (gameWinner) {\n      const winnerUsername =\n        gameWinner === playerSymbol ? username! : opponent!;\n      setWinner(winnerUsername === username ? \"You win!\" : `${opponent} wins!`);\n      handlePVPMatchResult(winnerUsername);\n      stopPollingMatchState();\n      stopPollingTimeout();\n      setIsTimerActive(false);\n    } else if (isBoardFull(newBoard)) {\n      setIsDraw(true);\n      handlePVPMatchResult(\"draw\");\n      stopPollingMatchState();\n      stopPollingTimeout();\n      setIsTimerActive(false);\n    }\n  };\n\n  const syncMove = async (row: number, col: number) => {\n    if (!matchId || !username) {\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        \"https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/match/move\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n          },\n          body: JSON.stringify({\n            matchId,\n            player: username,\n            move: { row, column: col },\n          }),\n        },\n      );\n\n      const data = await response.json();\n\n      if (response.ok) {\n        fetchMatchState();\n      } else {\n        console.error(\"Error syncing move:\", data);\n        alert(data.error || \"Error syncing move\");\n      }\n    } catch (error) {\n      console.error(\"Error syncing move:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleMatchTimeout = async () => {\n    if (!matchId || !username) return;\n\n    try {\n      const response = await fetch(\n        \"https://tic-tac-toe-fullstack-game.onrender.com/leaderboard/match/timeout\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n          },\n          body: JSON.stringify({\n            matchId,\n            player: username,\n          }),\n        },\n      );\n\n      const data = await response.json();\n\n      if (response.ok) {\n        if (data.winner) {\n          setWinner(\n            data.winner === null\n              ? \"Match ended due to timeout - Please try again\"\n              : data.winner === username\n                ? \"You win by timeout!\"\n                : `${opponent} wins by timeout!`,\n          );\n          handlePVPMatchResult(data.winner);\n          stopPollingMatchState();\n          stopPollingTimeout();\n          setIsTimerActive(false);\n        }\n      } else {\n        console.error(\"Error checking timeout:\", data);\n      }\n    } catch (error) {\n      console.error(\"Error checking timeout:\", error);\n    }\n  };\n\n  // Function to start polling for timeout\n  const startPollingTimeout = () => {\n    if (timeoutPollingInterval.current) return;\n    timeoutPollingInterval.current = setInterval(handleMatchTimeout, 5000);\n  };\n\n  const stopPollingTimeout = () => {\n    if (timeoutPollingInterval.current) {\n      clearInterval(timeoutPollingInterval.current);\n      timeoutPollingInterval.current = null;\n    }\n  };\n\n  const startPollingMatchState = () => {\n    if (pollingInterval.current) return;\n    pollingInterval.current = setInterval(fetchMatchState, 2000);\n  };\n\n  const stopPollingMatchState = () => {\n    if (pollingInterval.current) {\n      clearInterval(pollingInterval.current);\n      pollingInterval.current = null;\n    }\n  };\n\n  // Format timeLeft into MM:SS\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60)\n      .toString()\n      .padStart(2, \"0\");\n    const secs = (seconds % 60).toString().padStart(2, \"0\");\n    return `${mins}:${secs}`;\n  };\n\n  // Calculate progress percentage\n  const progressPercentage = (timeLeft / 30) * 100;\n\n  return (\n    <Box\n      sx={{\n        position: \"relative\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\",\n      }}\n    >\n      {gameMode === \"online\" && !matchId && (\n        <>\n          {isMatchmaking && <CircularProgress sx={{ mb: 2 }} />}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={startMatchmaking}\n            sx={{ mb: 2 }}\n            disabled={isMatchmaking}\n          >\n            {isMatchmaking ? \"Searching for opponent...\" : \"Start Matchmaking\"}\n          </Button>\n        </>\n      )}\n\n      {/* New Labels */}\n      {(gameMode !== \"online\" || opponent) && (\n        <>\n          <Typography variant=\"h6\" sx={{ fontFamily: \"Poppins\", mt: 2 }}>\n            {gameMode === \"online\" && opponent ? (\n              <>\n                You (\n                <span\n                  style={{\n                    color: playerSymbol === \"X\" ? \"#1976d2\" : \"red\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {playerSymbol}\n                </span>\n                ) vs {opponent} (\n                <span\n                  style={{\n                    color: opponentSymbol === \"X\" ? \"#1976d2\" : \"red\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {opponentSymbol}\n                </span>\n                )\n              </>\n            ) : isAI ? (\n              <>\n                Player (\n                <span style={{ color: \"#1976d2\", fontWeight: \"bold\" }}>X</span>)\n                vs AI (\n                <span style={{ color: \"red\", fontWeight: \"bold\" }}>O</span>)\n              </>\n            ) : (\n              <>\n                Player 1 (\n                <span style={{ color: \"#1976d2\", fontWeight: \"bold\" }}>X</span>)\n                vs Player 2 (\n                <span style={{ color: \"red\", fontWeight: \"bold\" }}>O</span>)\n              </>\n            )}\n          </Typography>\n          <Typography variant=\"h6\" sx={{ fontFamily: \"Poppins\", mt: 2 }}>\n            {winner || isDraw ? (\n              \"Game Over\"\n            ) : gameMode === \"local\" ? (\n              isPlayerTurn ? (\n                <span>\n                  <span style={{ color: \"#1976d2\" }}>X</span>'s Turn\n                </span>\n              ) : (\n                <span>\n                  <span style={{ color: \"red\" }}>O</span>'s Turn\n                </span>\n              )\n            ) : isPlayerTurn ? (\n              \"Your Turn\"\n            ) : gameMode === \"online\" ? (\n              `${opponent}'s Turn`\n            ) : isAI ? (\n              \"AI's Turn\"\n            ) : (\n              \"Opponent's Turn\"\n            )}\n          </Typography>\n\n          {/* Timer with Progress Circle */}\n          {isTimerActive && !winner && !isDraw && (\n            <Box\n              sx={{\n                position: \"relative\",\n                display: \"inline-flex\",\n                mt: 2,\n              }}\n            >\n              <CircularProgress\n                variant=\"determinate\"\n                value={progressPercentage}\n                size={80}\n                thickness={5}\n              />\n              <Box\n                sx={{\n                  top: 0,\n                  left: 0,\n                  bottom: 0,\n                  right: 0,\n                  position: \"absolute\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Typography variant=\"h6\" component=\"div\" color=\"textSecondary\">\n                  {formatTime(timeLeft)}\n                </Typography>\n              </Box>\n            </Box>\n          )}\n        </>\n      )}\n\n      <Box\n        sx={{\n          display: \"grid\",\n          gridTemplateColumns: `repeat(${boardSize}, 1fr)`,\n          gap: \"1px\",\n          mt: 2,\n        }}\n      >\n        {board.map((row, i) =>\n          row.map((cell, j) => (\n            <Cell\n              key={`${i}-${j}`}\n              value={cell}\n              onClick={() => handleCellClick(i, j)}\n            />\n          )),\n        )}\n      </Box>\n      {winner && (\n        <Typography variant=\"h6\" sx={{ mt: 2 }} color=\"success.main\">\n          {winner}\n        </Typography>\n      )}\n      {isDraw && (\n        <Typography variant=\"h6\" sx={{ mt: 2 }} color=\"warning.main\">\n          It's a draw!\n        </Typography>\n      )}\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={configurationBoard}\n        sx={{ margin: 2, fontFamily: \"Poppins\" }}\n      >\n        Back to Configuration\n      </Button>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={resetBoard}\n        sx={{ margin: 2, fontFamily: \"Poppins\" }}\n      >\n        Reset Board\n      </Button>\n\n      {/* Divider */}\n      <div\n        style={{\n          width: \"100%\",\n          borderBottom: \"1px solid #e0e0e0\",\n          margin: \"0 auto 20px\",\n        }}\n      />\n\n      <Typography\n        variant=\"body1\"\n        sx={{ fontFamily: \"Poppins\", margin: \"20px\" }}\n      >\n        Please use a wide screen like a laptop or desktop for the best\n        experience. Thank you for playing Tic Tac Toe Pro today! 🚀\n      </Typography>\n\n      {/* Loading Spinner Overlay */}\n      {isLoading && (\n        <Box\n          sx={{\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(128, 128, 128, 0.5)\",\n            zIndex: 9999,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <CircularProgress />\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}