{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mfauz\\\\Documents\\\\TicTacToe\\\\frontend\\\\src\\\\pages\\\\GameBoard.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Board from \"../components/Board\";\nimport { Box } from \"@mui/material\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameBoard = () => {\n  _s();\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      textAlign: \"center\",\n      py: 5\n    },\n    children: /*#__PURE__*/_jsxDEV(Board, {\n      boardSize: location.state.boardSize,\n      isAI: location.state.isAI,\n      aiDifficulty: location.state.aiDifficulty,\n      isTimerEnabled: location.state.isTimerEnabled,\n      timerDuration: location.state.timeLeft,\n      gameMode: location.state.gameMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoard, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","Board","Box","useLocation","jsxDEV","_jsxDEV","GameBoard","_s","location","sx","textAlign","py","children","boardSize","state","isAI","aiDifficulty","isTimerEnabled","timerDuration","timeLeft","gameMode","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mfauz/Documents/TicTacToe/frontend/src/pages/GameBoard.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Board from \"../components/Board\";\nimport Configuration from \"../components/Configuration\";\nimport { api } from \"../utils/api\";\nimport { Box, Typography } from \"@mui/material\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\n\ninterface GameBoardProps {\n  boardSize: number;\n  isAI: boolean;\n  gameMode: string;\n  aiDifficulty: string;\n  isTimerEnabled: boolean;\n  timeLeft: number;\n}\n\nconst GameBoard: React.FC = () => {\n  \n  const location = useLocation();\n  return (\n    <Box sx={{ textAlign: \"center\", py: 5 }}>\n      \n      <Board\n        boardSize={location.state.boardSize}\n        isAI={location.state.isAI}\n        aiDifficulty={location.state.aiDifficulty}\n        isTimerEnabled={location.state.isTimerEnabled}\n        timerDuration={location.state.timeLeft}\n        gameMode={location.state.gameMode}\n      />\n{/* \n<Board\n        boardSize={3}\n        isAI={true}\n        aiDifficulty={'easy'}\n        isTimerEnabled={true}\n        timerDuration={2800}\n        gameMode={'ai'}\n      /> */}\n    </Box>\n  );\n};\n\nexport default GameBoard;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAA+B,OAAO;AAClD,OAAOC,KAAK,MAAM,qBAAqB;AAGvC,SAASC,GAAG,QAAoB,eAAe;AAC/C,SAAeC,WAAW,QAAqB,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWlE,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhC,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,oBACEE,OAAA,CAACH,GAAG;IAACO,EAAE,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,eAEtCP,OAAA,CAACJ,KAAK;MACJY,SAAS,EAAEL,QAAQ,CAACM,KAAK,CAACD,SAAU;MACpCE,IAAI,EAAEP,QAAQ,CAACM,KAAK,CAACC,IAAK;MAC1BC,YAAY,EAAER,QAAQ,CAACM,KAAK,CAACE,YAAa;MAC1CC,cAAc,EAAET,QAAQ,CAACM,KAAK,CAACG,cAAe;MAC9CC,aAAa,EAAEV,QAAQ,CAACM,KAAK,CAACK,QAAS;MACvCC,QAAQ,EAAEZ,QAAQ,CAACM,KAAK,CAACM;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAUC,CAAC;AAEV,CAAC;AAACjB,EAAA,CAzBID,SAAmB;EAAA,QAENH,WAAW;AAAA;AAAAsB,EAAA,GAFxBnB,SAAmB;AA2BzB,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}